axis.text.x = element_blank(),
plot.title = element_text(size = 12, face = "plain"),
legend.position = "none")
theme_set(theme_minimal(base_size = 12))
# _____________________________________________________________________
# FUNCTIONS ----
# _____________________________________________________________________
source("run_sim.R")
source("helper_functions.R")
# _____________________________________________________________________
# SET UP ----
# _____________________________________________________________________
country    <- "USA"
C          <- readRDS(paste0("C_", country, "_bytens_overallupdated.RData"))
C_low      <- C/2 # scale to an R_0 of 1.3
age_demo   <- readRDS(paste0("age_demographics_", country,".RData"))
pop_total  <- age_demo[10]
age_demo   <- age_demo[1:9]
N_i        <- pop_total*age_demo
num_groups <- length(age_demo) # num age groups
IFR        <- c(9.530595e-04, 3.196070e-03, 1.071797e-02, 3.594256e-02, 1.205328e-01,
4.042049e-01, 1.355495e+00, 4.545632e+00, 1.524371e+01) # Ref: Levin
IFR        <- IFR/100 # as decimal
YLL_vec    <- readRDS(paste0("yll_vec_", country, ".RData"))
# susceptibility with R0 =2.6 for BEL, ref: Davies
#u_constant <- rep(0.0154, 9)
u_var      <- c(0.4, 0.38, 0.79, 0.86, 0.8, 0.82, 0.88, 0.74, 0.74)/39.80957
R0         <- compute_R0(u_var, C)
# susceptibility with R0 =2.6 for BEL, ref: Davies
#u_constant <- rep(0.0154, 9)
u_var      <- c(0.4, 0.38, 0.79, 0.86, 0.8, 0.82, 0.88, 0.74, 0.74)/(39.80957/2)
R0         <- compute_R0(u_var, C)
this_v_e   <- get_v_e(p = 0.9, y0 = 0.9, hinge_age = 50)
v_e_var    <- get_v_e(p = 0.5, y0 = 0.9, hinge_age = 50)
v_e_type   <- "aorn"
sero_none <- rep(0, 9) # no prior immunity
sero_belgium <- c(0.036, 0.137, 0.130, 0.131, 0.133, 0.132, 0.133,
0.067, 0.0501) # ref: Herzog, weighted average of 80 and 90 bins to get 80+
sero_CT <- c(0.039, 0.0382, 0.031, 0.031, 0.031, 0.037, 0.032, 0.027, 0.027)
sero_NY <- c(0.32, 0.3129, 0.249, 0.249, 0.264, 0.279, 0.2575, 0.2215, 0.207) # ref: NYC
ptm <- proc.time()
cores=detectCores()
cl <- makeCluster(cores[1]-1) #not to overload your computer
registerDoParallel(cl)
scenarios <- 1:3
fig1_plots <- foreach (p = scenarios) %dopar% {
list_all <- list_kids <- list_adults <- list_elderly <- list_twentyplus <- vector(mode = "list")
list_all_var <- list_kids_var <- list_adults_var <- list_elderly_var <- list_twentyplus_var <- vector(mode = "list")
# specify parameters for each scenario
if (p == 1){
this_C <- C_low
num_perday <- 0.01
} else if (p == 2){
this_C <- C
num_perday <- 0.01
} else {
this_C <- C
num_perday <- 1
}
for (i in seq(0, 50, by = 1)){
j <- i/100
list_all[[paste0(i)]] <- run_sim_new(this_C, j, "all", num_perday, v_e_type, this_v_e)
list_kids[[paste0(i)]] <- run_sim_new(this_C, j, "kids", num_perday, v_e_type, this_v_e)
list_adults[[paste0(i)]] <- run_sim_new(this_C, j, "adults", num_perday, v_e_type, this_v_e)
list_elderly[[paste0(i)]] <- run_sim_new(this_C, j, "elderly", num_perday, v_e_type, this_v_e)
list_twentyplus[[paste0(i)]] <- run_sim_new(this_C, j, "twentyplus", num_perday, v_e_type, this_v_e)
}
p_mort <- plot_over_vax_avail_new("deaths", "None", list_all, list_kids, list_adults, list_elderly, list_twentyplus)
p_infect <- plot_over_vax_avail_new("cases", "None", list_all, list_kids, list_adults, list_elderly, list_twentyplus)
p_yll <- plot_over_vax_avail_new("YLL", "None", list_all, list_kids, list_adults, list_elderly, list_twentyplus)
list(p_mort, p_infect, p_yll)
}
stopCluster(cl)
proc.time() - ptm
mort_1 <- fig1_plots[[1]][[1]] +
onlyy_theme +
theme(plot.margin=unit(c(0.25,0.25,0.25,0.25), "cm"))
mort_2 <- fig1_plots[[2]][[1]] +
nolabels_theme
mort_3 <- fig1_plots[[3]][[1]] +
nolabels_theme
infect_1 <- fig1_plots[[1]][[2]]  +
theme(axis.title.x = element_blank())
infect_2 <- fig1_plots[[2]][[2]] +
onlyx_theme +
theme(axis.title.x = element_blank())
infect_3 <- fig1_plots[[3]][[2]] +
onlyx_theme  +
theme(axis.title.x = element_blank())
panel <- ggarrange(mort_1, mort_2, mort_3, infect_1, infect_2, infect_3,
nrow = 2,
labels = c('B', 'C', 'D', 'E', 'F', 'G'),
label.args = list(gp = grid::gpar(fontsize=12, fontface = "bold"),
hjust=0, vjust = 1.1),
bottom = textGrob("Total vaccine supply (% of population)", gp = gpar(fontsize = 12),
vjust = 0.3, hjust = 0.36),
padding = unit(0.5, "line"))
p1 <- barplot_vax_strat("kids") +
theme(axis.title.y = element_blank())
#ylab("Distribution\nof vaccines (%)")
p2 <- barplot_vax_strat("adults") +
theme(axis.title.y = element_blank())
p3 <- barplot_vax_strat("20+") +
theme(axis.title.y = element_blank())
p4 <- barplot_vax_strat("elderly") +
theme(axis.title.y = element_blank())
p5 <- barplot_vax_strat("all") +
theme(axis.title.y = element_blank())
strategy_panel <- ggarrange(p1, p2, p3, p4, p5,
nrow = 5,
labels = c('A',  '', '', '', ''),
label.args = list(gp = grid::gpar(fontsize=12, fontface = "bold"),
hjust=1.8, vjust = 1.1),
left = textGrob("Distribution of vaccines (%)", rot = 90, hjust = 0.5),
bottom = textGrob("Age (years)", vjust = 0))
# export as pdf 9.5x4"
grid.arrange(strategy_panel, panel,
ncol = 2, widths = c(2, 7.5),
padding = unit(1, "line"))
plot_over_vax_avail_new = function(outcome, var_name, list_all_var, list_kids_var, list_adults_var, list_elderly_var, list_twentyplus_var){
library(ggplot2)
theme_set(theme_minimal(base_size = 12))
x_adults_switch     <- when_strat_switch(list_adults, 3:5)
x_kids_switch       <- when_strat_switch(list_kids, 1:2)
x_elderly_switch    <- when_strat_switch(list_elderly, 7:9)
x_twentyplus_switch <- when_strat_switch(list_twentyplus, 3:9)
x_adults_switch_var     <- when_strat_switch(list_adults_var, 3:5)
x_kids_switch_var       <- when_strat_switch(list_kids_var, 1:2)
x_elderly_switch_var    <- when_strat_switch(list_elderly_var, 7:9)
x_twentyplus_switch_var <- when_strat_switch(list_twentyplus_var, 3:9)
# get dataframe for specific outcome
if (outcome == "cases"){
df <- get_reduction_in_cases_df_new(list_all_var, list_kids_var, list_adults_var, list_elderly_var,
list_twentyplus_var)
# df <- rbind(df, optimal_df_cases)
} else if (outcome == "deaths"){
df <- get_reduction_in_deaths_df_new(list_all_var, list_kids_var, list_adults_var, list_elderly_var,
list_twentyplus_var)
# df <- rbind(df, optimal_df_deaths)
} else if (outcome == "YLL"){
df <- get_reduction_in_YLL_df_new(list_all_var, list_kids_var, list_adults_var, list_elderly_var,
list_twentyplus_var)
# df <- rbind(df, optimal_df_YLL)
}
# reallocate to everyone after age groups are completely vaccinated according to the strat
points_x <- c(x_kids_switch, x_elderly_switch, x_adults_switch)
points_x_var <- c(x_kids_switch_var, x_elderly_switch_var, x_adults_switch_var)
points_y <- c(df[df$strat == "kids" & df$vax_avail == x_kids_switch & df$variable == "constant", ]$reduction,
df[df$strat == "elderly" & df$vax_avail == x_elderly_switch & df$variable == "constant", ]$reduction,
df[df$strat == "adults" & df$vax_avail == x_adults_switch & df$variable == "constant", ]$reduction)
points_y_var <- c(df[df$strat == "kids" & df$vax_avail == x_kids_switch_var & df$variable == "var", ]$reduction,
df[df$strat == "elderly" & df$vax_avail == x_elderly_switch_var & df$variable == "var", ]$reduction,
df[df$strat == "adults" & df$vax_avail == x_adults_switch_var & df$variable == "var", ]$reduction)
if (x_twentyplus_switch > 0){
points_x <- c(points_x, x_twentyplus_switch)
points_y <- c(points_y, df[df$strat == "twentyplus" & df$vax_avail == x_twentyplus_switch & df$variable == "constant", ]$reduction)
points_y_var <- c(points_y_var, df[df$strat == "twentyplus" & df$vax_avail == x_twentyplus_switch & df$variable == "var", ]$reduction)
}
# plot
# for fig 2
df_var <- df[df$variable == "var", ]
df_const <- df[df$variable == "constant", ]
p <- ggplot() +
# geom_line(aes(x = df_var$vax_avail, y = df_var$reduction, col = df_var$strat),
#          linetype = "dashed", size = 1, alpha = 0.9) +
geom_line(aes(x = df_const$vax_avail, y = df_const$reduction, col = df_const$strat),
linetype = "solid", size = 1, alpha = 0.9) +
geom_line(aes(x = df_var[df_var$strat == "optimal",]$vax_avail,
y = df_var[df_var$strat == "optimal",]$reduction,
col = df_var[df_var$strat == "optimal",]$strat),
linetype = "solid", size = 1, alpha = 0.9) +
xlab("Total vaccine supply (% of population)") +
scale_color_brewer(palette = "Dark2", name = "Allocation Strategy",
labels =  c("Adults 20-49", "All Ages", "Adults 60+",
"Under 20", "Adults 20+")) +
scale_linetype_discrete(name = df$var_name,
labels = c("Constant", "Age-dependent")) +
scale_y_continuous(expand = c(0,0), limit = c(0, 100)) +
scale_x_continuous(expand = c(0,0), limit = c(0, 20)) +#, breaks = c(0,25,50)) +
coord_fixed(0.5*4/5) +
theme(legend.position = "none") +
guides(colour = guide_legend(override.aes = list(size=3)))
p <- p + geom_point(aes(x = points_x, y = points_y), size = 1.5) +
geom_point(aes(x = points_x_var, y = points_y_var), size = 1.5)
if (outcome == "cases"){ p <- p + ylab("Reduction in\ninfections (%)")}
else if (outcome == "deaths"){ p <- p + ylab("Reduction in\ndeaths (%)")}
else if (outcome == "YLL"){ p <- p + ylab("Reduction in\nYLL (%)")}
return(p)
}
ptm <- proc.time()
cores=detectCores()
cl <- makeCluster(cores[1]-1) #not to overload your computer
registerDoParallel(cl)
scenarios <- 1:3
fig1_plots <- foreach (p = scenarios) %dopar% {
list_all <- list_kids <- list_adults <- list_elderly <- list_twentyplus <- vector(mode = "list")
list_all_var <- list_kids_var <- list_adults_var <- list_elderly_var <- list_twentyplus_var <- vector(mode = "list")
# specify parameters for each scenario
if (p == 1){
this_C <- C_low
num_perday <- 0.01
} else if (p == 2){
this_C <- C
num_perday <- 0.01
} else {
this_C <- C
num_perday <- 1
}
for (i in seq(0, 50, by = 1)){
j <- i/100
list_all[[paste0(i)]] <- run_sim_new(this_C, j, "all", num_perday, v_e_type, this_v_e)
list_kids[[paste0(i)]] <- run_sim_new(this_C, j, "kids", num_perday, v_e_type, this_v_e)
list_adults[[paste0(i)]] <- run_sim_new(this_C, j, "adults", num_perday, v_e_type, this_v_e)
list_elderly[[paste0(i)]] <- run_sim_new(this_C, j, "elderly", num_perday, v_e_type, this_v_e)
list_twentyplus[[paste0(i)]] <- run_sim_new(this_C, j, "twentyplus", num_perday, v_e_type, this_v_e)
}
p_mort <- plot_over_vax_avail_new("deaths", "None", list_all, list_kids, list_adults, list_elderly, list_twentyplus)
p_infect <- plot_over_vax_avail_new("cases", "None", list_all, list_kids, list_adults, list_elderly, list_twentyplus)
p_yll <- plot_over_vax_avail_new("YLL", "None", list_all, list_kids, list_adults, list_elderly, list_twentyplus)
list(p_mort, p_infect, p_yll)
}
stopCluster(cl)
proc.time() - ptm
mort_1 <- fig1_plots[[1]][[1]] +
onlyy_theme +
theme(plot.margin=unit(c(0.25,0.25,0.25,0.25), "cm"))
mort_2 <- fig1_plots[[2]][[1]] +
nolabels_theme
mort_3 <- fig1_plots[[3]][[1]] +
nolabels_theme
infect_1 <- fig1_plots[[1]][[2]]  +
theme(axis.title.x = element_blank())
infect_2 <- fig1_plots[[2]][[2]] +
onlyx_theme +
theme(axis.title.x = element_blank())
infect_3 <- fig1_plots[[3]][[2]] +
onlyx_theme  +
theme(axis.title.x = element_blank())
panel <- ggarrange(mort_1, mort_2, mort_3, infect_1, infect_2, infect_3,
nrow = 2,
labels = c('B', 'C', 'D', 'E', 'F', 'G'),
label.args = list(gp = grid::gpar(fontsize=12, fontface = "bold"),
hjust=0, vjust = 1.1),
bottom = textGrob("Total vaccine supply (% of population)", gp = gpar(fontsize = 12),
vjust = 0.3, hjust = 0.36),
padding = unit(0.5, "line"))
p1 <- barplot_vax_strat("kids") +
theme(axis.title.y = element_blank())
#ylab("Distribution\nof vaccines (%)")
p2 <- barplot_vax_strat("adults") +
theme(axis.title.y = element_blank())
p3 <- barplot_vax_strat("20+") +
theme(axis.title.y = element_blank())
p4 <- barplot_vax_strat("elderly") +
theme(axis.title.y = element_blank())
p5 <- barplot_vax_strat("all") +
theme(axis.title.y = element_blank())
strategy_panel <- ggarrange(p1, p2, p3, p4, p5,
nrow = 5,
labels = c('A',  '', '', '', ''),
label.args = list(gp = grid::gpar(fontsize=12, fontface = "bold"),
hjust=1.8, vjust = 1.1),
left = textGrob("Distribution of vaccines (%)", rot = 90, hjust = 0.5),
bottom = textGrob("Age (years)", vjust = 0))
# export as pdf 9.5x4"
grid.arrange(strategy_panel, panel,
ncol = 2, widths = c(2, 7.5),
padding = unit(1, "line"))
plot_over_vax_avail_new = function(outcome, var_name, list_all_var, list_kids_var, list_adults_var, list_elderly_var, list_twentyplus_var){
library(ggplot2)
theme_set(theme_minimal(base_size = 12))
x_adults_switch     <- when_strat_switch(list_adults, 3:5)
x_kids_switch       <- when_strat_switch(list_kids, 1:2)
x_elderly_switch    <- when_strat_switch(list_elderly, 7:9)
x_twentyplus_switch <- when_strat_switch(list_twentyplus, 3:9)
x_adults_switch_var     <- when_strat_switch(list_adults_var, 3:5)
x_kids_switch_var       <- when_strat_switch(list_kids_var, 1:2)
x_elderly_switch_var    <- when_strat_switch(list_elderly_var, 7:9)
x_twentyplus_switch_var <- when_strat_switch(list_twentyplus_var, 3:9)
# get dataframe for specific outcome
if (outcome == "cases"){
df <- get_reduction_in_cases_df_new(list_all_var, list_kids_var, list_adults_var, list_elderly_var,
list_twentyplus_var)
# df <- rbind(df, optimal_df_cases)
} else if (outcome == "deaths"){
df <- get_reduction_in_deaths_df_new(list_all_var, list_kids_var, list_adults_var, list_elderly_var,
list_twentyplus_var)
# df <- rbind(df, optimal_df_deaths)
} else if (outcome == "YLL"){
df <- get_reduction_in_YLL_df_new(list_all_var, list_kids_var, list_adults_var, list_elderly_var,
list_twentyplus_var)
# df <- rbind(df, optimal_df_YLL)
}
# reallocate to everyone after age groups are completely vaccinated according to the strat
points_x <- c(x_kids_switch, x_elderly_switch, x_adults_switch)
points_x_var <- c(x_kids_switch_var, x_elderly_switch_var, x_adults_switch_var)
points_y <- c(df[df$strat == "kids" & df$vax_avail == x_kids_switch & df$variable == "constant", ]$reduction,
df[df$strat == "elderly" & df$vax_avail == x_elderly_switch & df$variable == "constant", ]$reduction,
df[df$strat == "adults" & df$vax_avail == x_adults_switch & df$variable == "constant", ]$reduction)
points_y_var <- c(df[df$strat == "kids" & df$vax_avail == x_kids_switch_var & df$variable == "var", ]$reduction,
df[df$strat == "elderly" & df$vax_avail == x_elderly_switch_var & df$variable == "var", ]$reduction,
df[df$strat == "adults" & df$vax_avail == x_adults_switch_var & df$variable == "var", ]$reduction)
if (x_twentyplus_switch > 0){
points_x <- c(points_x, x_twentyplus_switch)
points_y <- c(points_y, df[df$strat == "twentyplus" & df$vax_avail == x_twentyplus_switch & df$variable == "constant", ]$reduction)
points_y_var <- c(points_y_var, df[df$strat == "twentyplus" & df$vax_avail == x_twentyplus_switch & df$variable == "var", ]$reduction)
}
# plot
# for fig 2
df_var <- df[df$variable == "var", ]
df_const <- df[df$variable == "constant", ]
p <- ggplot() +
# geom_line(aes(x = df_var$vax_avail, y = df_var$reduction, col = df_var$strat),
#          linetype = "dashed", size = 1, alpha = 0.9) +
geom_line(aes(x = df_const$vax_avail, y = df_const$reduction, col = df_const$strat),
linetype = "solid", size = 1, alpha = 0.9) +
geom_line(aes(x = df_var[df_var$strat == "optimal",]$vax_avail,
y = df_var[df_var$strat == "optimal",]$reduction,
col = df_var[df_var$strat == "optimal",]$strat),
linetype = "solid", size = 1, alpha = 0.9) +
xlab("Total vaccine supply (% of population)") +
scale_color_brewer(palette = "Dark2", name = "Allocation Strategy",
labels =  c("Adults 20-49", "All Ages", "Adults 60+",
"Under 20", "Adults 20+")) +
scale_linetype_discrete(name = df$var_name,
labels = c("Constant", "Age-dependent")) +
scale_y_continuous(expand = c(0,0), limit = c(0, 100)) +
scale_x_continuous(expand = c(0,0), limit = c(0, 50)) +#, breaks = c(0,25,50)) +
coord_fixed(0.5*4/5) +
theme(legend.position = "none") +
guides(colour = guide_legend(override.aes = list(size=3)))
p <- p + geom_point(aes(x = points_x, y = points_y), size = 1.5) +
geom_point(aes(x = points_x_var, y = points_y_var), size = 1.5)
if (outcome == "cases"){ p <- p + ylab("Reduction in\ninfections (%)")}
else if (outcome == "deaths"){ p <- p + ylab("Reduction in\ndeaths (%)")}
else if (outcome == "YLL"){ p <- p + ylab("Reduction in\nYLL (%)")}
return(p)
}
mort_1 <- fig1_plots[[1]][[1]] +
onlyy_theme +
theme(plot.margin=unit(c(0.25,0.25,0.25,0.25), "cm"))
mort_2 <- fig1_plots[[2]][[1]] +
nolabels_theme
mort_3 <- fig1_plots[[3]][[1]] +
nolabels_theme
infect_1 <- fig1_plots[[1]][[2]]  +
theme(axis.title.x = element_blank())
infect_2 <- fig1_plots[[2]][[2]] +
onlyx_theme +
theme(axis.title.x = element_blank())
infect_3 <- fig1_plots[[3]][[2]] +
onlyx_theme  +
theme(axis.title.x = element_blank())
panel <- ggarrange(mort_1, mort_2, mort_3, infect_1, infect_2, infect_3,
nrow = 2,
labels = c('B', 'C', 'D', 'E', 'F', 'G'),
label.args = list(gp = grid::gpar(fontsize=12, fontface = "bold"),
hjust=0, vjust = 1.1),
bottom = textGrob("Total vaccine supply (% of population)", gp = gpar(fontsize = 12),
vjust = 0.3, hjust = 0.36),
padding = unit(0.5, "line"))
plot_over_vax_avail_new = function(outcome, var_name, list_all_var, list_kids_var, list_adults_var, list_elderly_var, list_twentyplus_var){
library(ggplot2)
theme_set(theme_minimal(base_size = 12))
x_adults_switch     <- when_strat_switch(list_adults, 3:5)
x_kids_switch       <- when_strat_switch(list_kids, 1:2)
x_elderly_switch    <- when_strat_switch(list_elderly, 7:9)
x_twentyplus_switch <- when_strat_switch(list_twentyplus, 3:9)
x_adults_switch_var     <- when_strat_switch(list_adults_var, 3:5)
x_kids_switch_var       <- when_strat_switch(list_kids_var, 1:2)
x_elderly_switch_var    <- when_strat_switch(list_elderly_var, 7:9)
x_twentyplus_switch_var <- when_strat_switch(list_twentyplus_var, 3:9)
# get dataframe for specific outcome
if (outcome == "cases"){
df <- get_reduction_in_cases_df_new(list_all_var, list_kids_var, list_adults_var, list_elderly_var,
list_twentyplus_var)
# df <- rbind(df, optimal_df_cases)
} else if (outcome == "deaths"){
df <- get_reduction_in_deaths_df_new(list_all_var, list_kids_var, list_adults_var, list_elderly_var,
list_twentyplus_var)
# df <- rbind(df, optimal_df_deaths)
} else if (outcome == "YLL"){
df <- get_reduction_in_YLL_df_new(list_all_var, list_kids_var, list_adults_var, list_elderly_var,
list_twentyplus_var)
# df <- rbind(df, optimal_df_YLL)
}
# reallocate to everyone after age groups are completely vaccinated according to the strat
points_x <- c(x_kids_switch, x_elderly_switch, x_adults_switch)
points_x_var <- c(x_kids_switch_var, x_elderly_switch_var, x_adults_switch_var)
points_y <- c(df[df$strat == "kids" & df$vax_avail == x_kids_switch & df$variable == "constant", ]$reduction,
df[df$strat == "elderly" & df$vax_avail == x_elderly_switch & df$variable == "constant", ]$reduction,
df[df$strat == "adults" & df$vax_avail == x_adults_switch & df$variable == "constant", ]$reduction)
points_y_var <- c(df[df$strat == "kids" & df$vax_avail == x_kids_switch_var & df$variable == "var", ]$reduction,
df[df$strat == "elderly" & df$vax_avail == x_elderly_switch_var & df$variable == "var", ]$reduction,
df[df$strat == "adults" & df$vax_avail == x_adults_switch_var & df$variable == "var", ]$reduction)
if (x_twentyplus_switch > 0){
points_x <- c(points_x, x_twentyplus_switch)
points_y <- c(points_y, df[df$strat == "twentyplus" & df$vax_avail == x_twentyplus_switch & df$variable == "constant", ]$reduction)
points_y_var <- c(points_y_var, df[df$strat == "twentyplus" & df$vax_avail == x_twentyplus_switch & df$variable == "var", ]$reduction)
}
# plot
# for fig 2
df_var <- df[df$variable == "var", ]
df_const <- df[df$variable == "constant", ]
p <- ggplot() +
# geom_line(aes(x = df_var$vax_avail, y = df_var$reduction, col = df_var$strat),
#          linetype = "dashed", size = 1, alpha = 0.9) +
geom_line(aes(x = df_const$vax_avail, y = df_const$reduction, col = df_const$strat),
linetype = "solid", size = 1, alpha = 0.9) +
geom_line(aes(x = df_var[df_var$strat == "optimal",]$vax_avail,
y = df_var[df_var$strat == "optimal",]$reduction,
col = df_var[df_var$strat == "optimal",]$strat),
linetype = "solid", size = 1, alpha = 0.9) +
xlab("Total vaccine supply (% of population)") +
scale_color_brewer(palette = "Dark2", name = "Allocation Strategy",
labels =  c("Adults 20-49", "All Ages", "Adults 60+",
"Under 20", "Adults 20+")) +
scale_linetype_discrete(name = df$var_name,
labels = c("Constant", "Age-dependent")) +
scale_y_continuous(expand = c(0,0), limit = c(0, 100)) +
scale_x_continuous(expand = c(0,0), limit = c(0, 50)) +#, breaks = c(0,25,50)) +
coord_fixed(0.5*4/5) +
theme(legend.position = "none") +
guides(colour = guide_legend(override.aes = list(size=3)))
p <- p + geom_point(aes(x = points_x, y = points_y), size = 1.5) +
geom_point(aes(x = points_x_var, y = points_y_var), size = 1.5)
if (outcome == "cases"){ p <- p + ylab("Reduction in\ninfections (%)")}
else if (outcome == "deaths"){ p <- p + ylab("Reduction in\ndeaths (%)")}
else if (outcome == "YLL"){ p <- p + ylab("Reduction in\nYLL (%)")}
return(p)
}
mort_1 <- fig1_plots[[1]][[1]] +
onlyy_theme +
theme(plot.margin=unit(c(0.25,0.25,0.25,0.25), "cm"))
mort_2 <- fig1_plots[[2]][[1]] +
nolabels_theme
mort_3 <- fig1_plots[[3]][[1]] +
nolabels_theme
infect_1 <- fig1_plots[[1]][[2]]  +
theme(axis.title.x = element_blank())
infect_2 <- fig1_plots[[2]][[2]] +
onlyx_theme +
theme(axis.title.x = element_blank())
infect_3 <- fig1_plots[[3]][[2]] +
onlyx_theme  +
theme(axis.title.x = element_blank())
panel <- ggarrange(mort_1, mort_2, mort_3, infect_1, infect_2, infect_3,
nrow = 2,
labels = c('B', 'C', 'D', 'E', 'F', 'G'),
label.args = list(gp = grid::gpar(fontsize=12, fontface = "bold"),
hjust=0, vjust = 1.1),
bottom = textGrob("Total vaccine supply (% of population)", gp = gpar(fontsize = 12),
vjust = 0.3, hjust = 0.36),
padding = unit(0.5, "line"))
warnings()
ptm <- proc.time()
cores=detectCores()
cl <- makeCluster(cores[1]-1) #not to overload your computer
registerDoParallel(cl)
scenarios <- 1:3
fig1_plots <- foreach (p = scenarios) %dopar% {
list_all <- list_kids <- list_adults <- list_elderly <- list_twentyplus <- vector(mode = "list")
list_all_var <- list_kids_var <- list_adults_var <- list_elderly_var <- list_twentyplus_var <- vector(mode = "list")
# specify parameters for each scenario
if (p == 1){
this_C <- C_low
num_perday <- 0.01
} else if (p == 2){
this_C <- C
num_perday <- 0.01
} else {
this_C <- C
num_perday <- 1
}
for (i in seq(0, 50, by = 1)){
j <- i/100
list_all[[paste0(i)]] <- run_sim_new(this_C, j, "all", num_perday, v_e_type, this_v_e)
list_kids[[paste0(i)]] <- run_sim_new(this_C, j, "kids", num_perday, v_e_type, this_v_e)
list_adults[[paste0(i)]] <- run_sim_new(this_C, j, "adults", num_perday, v_e_type, this_v_e)
list_elderly[[paste0(i)]] <- run_sim_new(this_C, j, "elderly", num_perday, v_e_type, this_v_e)
list_twentyplus[[paste0(i)]] <- run_sim_new(this_C, j, "twentyplus", num_perday, v_e_type, this_v_e)
}
p_mort <- plot_over_vax_avail_new("deaths", "None", list_all, list_kids, list_adults, list_elderly, list_twentyplus)
p_infect <- plot_over_vax_avail_new("cases", "None", list_all, list_kids, list_adults, list_elderly, list_twentyplus)
p_yll <- plot_over_vax_avail_new("YLL", "None", list_all, list_kids, list_adults, list_elderly, list_twentyplus)
list(p_mort, p_infect, p_yll)
}
stopCluster(cl)
proc.time() - ptm
mort_1 <- fig1_plots[[1]][[1]] +
onlyy_theme +
theme(plot.margin=unit(c(0.25,0.25,0.25,0.25), "cm"))
mort_2 <- fig1_plots[[2]][[1]] +
nolabels_theme
mort_3 <- fig1_plots[[3]][[1]] +
nolabels_theme
infect_1 <- fig1_plots[[1]][[2]]  +
theme(axis.title.x = element_blank())
infect_2 <- fig1_plots[[2]][[2]] +
onlyx_theme +
theme(axis.title.x = element_blank())
infect_3 <- fig1_plots[[3]][[2]] +
onlyx_theme  +
theme(axis.title.x = element_blank())
panel <- ggarrange(mort_1, mort_2, mort_3, infect_1, infect_2, infect_3,
nrow = 2,
labels = c('B', 'C', 'D', 'E', 'F', 'G'),
label.args = list(gp = grid::gpar(fontsize=12, fontface = "bold"),
hjust=0, vjust = 1.1),
bottom = textGrob("Total vaccine supply (% of population)", gp = gpar(fontsize = 12),
vjust = 0.3, hjust = 0.36),
padding = unit(0.5, "line"))
