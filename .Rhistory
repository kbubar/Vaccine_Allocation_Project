df <- get_reduction_in_YLL_df(list_all_var, list_kids_var, list_adults_var, list_elderly_var, list_twentyplus_var)
}
if (percent_kids < 50){df[df$strat == "kids" & df$vax_avail > percent_kids, ]$reduction = NA}
if (percent_elderly < 50) {df[df$strat == "elderly" & df$vax_avail > percent_elderly, ]$reduction = NA}
if (percent_adults < 50) {df[df$strat == "adults" & df$vax_avail > percent_adults, ]$reduction = NA}
if (percent_twentyplus < 50) {df[df$strat == "twentyplus" & df$vax_avail > percent_twentyplus, ]$reduction = NA}
p <- ggplot(df, aes(x = vax_avail, y = reduction, col = strat, fill = strat)) +
#geom_line(aes(linetype = variable), size = 2, alpha = 1) +
xlab("Total vaccine supply (% of pop)") +
scale_color_brewer(palette = "Dark2", name = "Allocation Strategy",
labels =  c("Adults 20-49", "All Ages", "Adults 60+",
"Under 20", "Adults 20+")) +
scale_linetype_discrete(name = var_name,
labels = c("Constant", "Age-dependent")) +
scale_y_continuous(expand = c(0,0), limit = c(0, 100.2)) +
scale_x_continuous(expand = c(0,0), limit = c(0, 50)) +#, breaks = c(0,25,50)) +
# geom_abline(slope = 1, intercept = 0, size = 3, alpha = 0.2) +
# ggtitle("Optimizing for least deaths") +
theme(legend.position = "none",
#       axis.title.x =element_blank(),
#       axis.text.x  = element_blank(),
#       axis.text.y  = element_blank(),
#       axis.title.y = element_blank()
) +
theme(legend.text = element_text(size=22),
legend.title = element_text(size =22)) +
guides(colour = guide_legend(override.aes = list(size=6)))
if (outcome == "cases"){ p <- p + ylab("Reduction in infections (%)")}
else if (outcome == "deaths"){ p <- p + ylab("Reduction in deaths (%)")}
else if (outcome == "YLL"){ p <- p + ylab("Reduction in YLL (%)")}
plot(p)
}
plot_over_vax_avail(outcome, "None", list_all, list_kids, list_adults, list_elderly, list_twentyplus)
# Plot over vaccine avaliablity ----
plot_over_vax_avail = function(outcome, var_name, list_all_var, list_kids_var, list_adults_var, list_elderly_var, list_twentyplus_var){
theme_set(theme_minimal(base_size = 26))
#theme_set(theme_bw(base_size = 26))
percent_kids <- round(sum(age_demo[1:2])*100)
percent_elderly <- round(sum(age_demo[7:9])*100)
percent_adults <- round(sum(age_demo[3:5])*100)
percent_twentyplus <- round(sum(age_demo[3:9])*100)
if (outcome == "cases"){
df <- get_reduction_in_cases_df(list_all_var, list_kids_var, list_adults_var, list_elderly_var, list_twentyplus_var)
}
else if (outcome == "deaths"){
df <- get_reduction_in_deaths_df(list_all_var, list_kids_var, list_adults_var, list_elderly_var, list_twentyplus_var)
#df <- rbind(df[df$variable == "var", ], optimal_df_C[optimal_df_C$variable == "var", ])
}
else if (outcome == "YLL"){
df <- get_reduction_in_YLL_df(list_all_var, list_kids_var, list_adults_var, list_elderly_var, list_twentyplus_var)
}
if (percent_kids < 50){df[df$strat == "kids" & df$vax_avail > percent_kids, ]$reduction = NA}
if (percent_elderly < 50) {df[df$strat == "elderly" & df$vax_avail > percent_elderly, ]$reduction = NA}
if (percent_adults < 50) {df[df$strat == "adults" & df$vax_avail > percent_adults, ]$reduction = NA}
if (percent_twentyplus < 50) {df[df$strat == "twentyplus" & df$vax_avail > percent_twentyplus, ]$reduction = NA}
p <- ggplot(df, aes(x = vax_avail, y = reduction, col = strat, fill = strat)) +
geom_line(size = 2, alpha = 1) + #aes(linetype = variable)
xlab("Total vaccine supply (% of pop)") +
scale_color_brewer(palette = "Dark2", name = "Allocation Strategy",
labels =  c("Adults 20-49", "All Ages", "Adults 60+",
"Under 20", "Adults 20+")) +
scale_linetype_discrete(name = var_name,
labels = c("Constant", "Age-dependent")) +
scale_y_continuous(expand = c(0,0), limit = c(0, 100.2)) +
scale_x_continuous(expand = c(0,0), limit = c(0, 50)) +#, breaks = c(0,25,50)) +
# geom_abline(slope = 1, intercept = 0, size = 3, alpha = 0.2) +
# ggtitle("Optimizing for least deaths") +
theme(legend.position = "none",
#       axis.title.x =element_blank(),
#       axis.text.x  = element_blank(),
#       axis.text.y  = element_blank(),
#       axis.title.y = element_blank()
) +
theme(legend.text = element_text(size=22),
legend.title = element_text(size =22)) +
guides(colour = guide_legend(override.aes = list(size=6)))
if (outcome == "cases"){ p <- p + ylab("Reduction in infections (%)")}
else if (outcome == "deaths"){ p <- p + ylab("Reduction in deaths (%)")}
else if (outcome == "YLL"){ p <- p + ylab("Reduction in YLL (%)")}
plot(p)
}
plot_over_vax_avail(outcome, "None", list_all, list_kids, list_adults, list_elderly, list_twentyplus)
# Plot over vaccine avaliablity ----
plot_over_vax_avail = function(outcome, var_name, list_all_var, list_kids_var, list_adults_var, list_elderly_var, list_twentyplus_var){
theme_set(theme_minimal(base_size = 26))
#theme_set(theme_bw(base_size = 26))
percent_kids <- round(sum(age_demo[1:2])*100)
percent_elderly <- round(sum(age_demo[7:9])*100)
percent_adults <- round(sum(age_demo[3:5])*100)
percent_twentyplus <- round(sum(age_demo[3:9])*100)
if (outcome == "cases"){
df <- get_reduction_in_cases_df(list_all_var, list_kids_var, list_adults_var, list_elderly_var, list_twentyplus_var)
}
else if (outcome == "deaths"){
df <- get_reduction_in_deaths_df(list_all_var, list_kids_var, list_adults_var, list_elderly_var, list_twentyplus_var)
#df <- rbind(df[df$variable == "var", ], optimal_df_C[optimal_df_C$variable == "var", ])
}
else if (outcome == "YLL"){
df <- get_reduction_in_YLL_df(list_all_var, list_kids_var, list_adults_var, list_elderly_var, list_twentyplus_var)
}
if (percent_kids < 50){df[df$strat == "kids" & df$vax_avail > percent_kids, ]$reduction = NA}
if (percent_elderly < 50) {df[df$strat == "elderly" & df$vax_avail > percent_elderly, ]$reduction = NA}
if (percent_adults < 50) {df[df$strat == "adults" & df$vax_avail > percent_adults, ]$reduction = NA}
if (percent_twentyplus < 50) {df[df$strat == "twentyplus" & df$vax_avail > percent_twentyplus, ]$reduction = NA}
p <- ggplot(df, aes(x = vax_avail, y = reduction, col = strat, fill = strat)) +
geom_line(size = 2, alpha = 1) + #aes(linetype = variable)
xlab("Total vaccine supply (% of pop)") +
scale_color_brewer(palette = "Dark2", name = "Allocation Strategy",
labels =  c("Adults 20-49", "All Ages", "Adults 60+",
"Under 20", "Adults 20+")) +
scale_linetype_discrete(name = var_name,
labels = c("Constant", "Age-dependent")) +
scale_y_continuous(expand = c(0,0), limit = c(0, 100.2)) +
scale_x_continuous(expand = c(0,0), limit = c(0, 50)) +#, breaks = c(0,25,50)) +
# geom_abline(slope = 1, intercept = 0, size = 3, alpha = 0.2) +
ggtitle(paste0(country)) +
theme(legend.position = "none",
#       axis.title.x =element_blank(),
#       axis.text.x  = element_blank(),
#       axis.text.y  = element_blank(),
#       axis.title.y = element_blank()
) +
theme(legend.text = element_text(size=22),
legend.title = element_text(size =22)) +
guides(colour = guide_legend(override.aes = list(size=6)))
if (outcome == "cases"){ p <- p + ylab("Reduction in infections (%)")}
else if (outcome == "deaths"){ p <- p + ylab("Reduction in deaths (%)")}
else if (outcome == "YLL"){ p <- p + ylab("Reduction in YLL (%)")}
plot(p)
}
plot_over_vax_avail(outcome, "None", list_all, list_kids, list_adults, list_elderly, list_twentyplus)
# Plot over vaccine avaliablity ----
plot_over_vax_avail = function(outcome, var_name, list_all_var, list_kids_var, list_adults_var, list_elderly_var, list_twentyplus_var){
theme_set(theme_minimal(base_size = 26))
#theme_set(theme_bw(base_size = 26))
percent_kids <- round(sum(age_demo[1:2])*100)
percent_elderly <- round(sum(age_demo[7:9])*100)
percent_adults <- round(sum(age_demo[3:5])*100)
percent_twentyplus <- round(sum(age_demo[3:9])*100)
if (outcome == "cases"){
df <- get_reduction_in_cases_df(list_all_var, list_kids_var, list_adults_var, list_elderly_var, list_twentyplus_var)
}
else if (outcome == "deaths"){
df <- get_reduction_in_deaths_df(list_all_var, list_kids_var, list_adults_var, list_elderly_var, list_twentyplus_var)
#df <- rbind(df[df$variable == "var", ], optimal_df_C[optimal_df_C$variable == "var", ])
}
else if (outcome == "YLL"){
df <- get_reduction_in_YLL_df(list_all_var, list_kids_var, list_adults_var, list_elderly_var, list_twentyplus_var)
}
if (percent_kids < 50){df[df$strat == "kids" & df$vax_avail > percent_kids, ]$reduction = NA}
if (percent_elderly < 50) {df[df$strat == "elderly" & df$vax_avail > percent_elderly, ]$reduction = NA}
if (percent_adults < 50) {df[df$strat == "adults" & df$vax_avail > percent_adults, ]$reduction = NA}
if (percent_twentyplus < 50) {df[df$strat == "twentyplus" & df$vax_avail > percent_twentyplus, ]$reduction = NA}
p <- ggplot(df, aes(x = vax_avail, y = reduction, col = strat, fill = strat)) +
geom_line(size = 2, alpha = 1) + #aes(linetype = variable)
xlab("Total vaccine supply (% of pop)") +
scale_color_brewer(palette = "Dark2", name = "Allocation Strategy",
labels =  c("Adults 20-49", "All Ages", "Adults 60+",
"Under 20", "Adults 20+")) +
scale_linetype_discrete(name = var_name,
labels = c("Constant", "Age-dependent")) +
scale_y_continuous(expand = c(0,0), limit = c(0, 100.2)) +
scale_x_continuous(expand = c(0,0), limit = c(0, 50)) +#, breaks = c(0,25,50)) +
# geom_abline(slope = 1, intercept = 0, size = 3, alpha = 0.2) +
ggtitle(paste0(country)) +
theme(legend.position = "none",
#       axis.title.x =element_blank(),
#       axis.text.x  = element_blank(),
#       axis.text.y  = element_blank(),
#       axis.title.y = element_blank()
) +
theme(legend.text = element_text(size=22),
legend.title = element_text(size =22),
title = element_text(size = 22)) +
guides(colour = guide_legend(override.aes = list(size=6)))
if (outcome == "cases"){ p <- p + ylab("Reduction in infections (%)")}
else if (outcome == "deaths"){ p <- p + ylab("Reduction in deaths (%)")}
else if (outcome == "YLL"){ p <- p + ylab("Reduction in YLL (%)")}
plot(p)
}
plot_over_vax_avail(outcome, "None", list_all, list_kids, list_adults, list_elderly, list_twentyplus)
country <- "USA"
C <- readRDS(paste0("C_", country, "_bytens_overall.RData"))
age_demo <- readRDS(paste0("age_demographics_", country,".RData"))
pop_total <- age_demo[10]
age_demo <- age_demo[1:9]
N_i <-  pop_total*age_demo
num_groups <- length(age_demo) # num age groups
IFR   <- c(9.530595e-04, 3.196070e-03, 1.071797e-02, 3.594256e-02, 1.205328e-01, 4.042049e-01, 1.355495e+00, 4.545632e+00,
1.524371e+01) # Ref: Levin
IFR   <- IFR/100 # as decimal
YLL_vec <- readRDS(paste0("yll_vec_", country, ".RData"))
# susceptibility with R0 ~ 3 (R0 <- compute_R0(u, C))
#u_constant     <- rep(0.0154, 9) # constant # 0.0154 for Belgium
u_var     <- c(0.4, 0.38, 0.79, 0.86, 0.8, 0.82, 0.88, 0.74, 0.74)/38.1 # R0 = 2.6 for BEL, Ref: Davies
R0 <- compute_R0(u_constant, C)
# vaccine efficacy
v_e_constant <- get_v_e(p = 1, y0 = 1, hinge_age = 50)
v_e_var <- get_v_e(p = 0.5, y0 = 1, hinge_age = 50) # p is the final v_e % (as a decimal),  TODO: CHANGED y0 from 1 to 0.5
# serology
sero_none <- rep(0, 9) # no prior immunity
#sero_belgium <- c(0.052, 0.052, 0.076, 0.055, 0.063, 0.071, 0.038, 0.042, 0.1) # Ref: Herzog
sero_belgium <- c(0.03760, 0.08981, 0.07008, 0.05616,0.02732, 0.03709, 0.02071, 0.02646,0.03477) # Ref: Herzog
sero_NY <- c(0.32, 0.3129, 0.249, 0.249, 0.264, 0.279, 0.2575, 0.2215, 0.207)
# _____________________________________________________________________
# RUN SIM ----
# _____________________________________________________________________
# strategy options: "no vax", "all", "kids", "adults", "elderly"
# df_novax <- run_sim(C, 0, "no vax", u_var, v_e_constant)
# saveRDS(df_novax, "US_sim_novax.RData")
# * Simple model (US: everything constant besides IFR) ----
list_all      <- vector(mode = "list")
list_kids     <- vector(mode = "list")
list_adults   <- vector(mode = "list")
list_elderly  <- vector(mode = "list")
list_twentyplus   <- vector(mode = "list")
ptm <- proc.time()
for (i in seq(0, 50, by = 1)){
j <- i/100
list_all[[paste0(i)]] <- run_sim(C, percent_vax = j, strategy = "all", u = u_var)
list_kids[[paste0(i)]] <- run_sim(C, j, "kids", u_var)
list_adults[[paste0(i)]] <- run_sim(C, j, "adults", u_var)
list_elderly[[paste0(i)]] <- run_sim(C, j, "elderly", u_var)
list_twentyplus[[paste0(i)]] <- run_sim(C, j, "20+", u_var)
}
proc.time() - ptm
outcome <- "YLL"
plot_over_vax_avail(outcome, "None", list_all, list_kids, list_adults, list_elderly, list_twentyplus)
country <- "BEL"
C <- readRDS(paste0("C_", country, "_bytens_overall.RData"))
age_demo <- readRDS(paste0("age_demographics_", country,".RData"))
pop_total <- age_demo[10]
age_demo <- age_demo[1:9]
N_i <-  pop_total*age_demo
num_groups <- length(age_demo) # num age groups
IFR   <- c(9.530595e-04, 3.196070e-03, 1.071797e-02, 3.594256e-02, 1.205328e-01, 4.042049e-01, 1.355495e+00, 4.545632e+00,
1.524371e+01) # Ref: Levin
IFR   <- IFR/100 # as decimal
YLL_vec <- readRDS(paste0("yll_vec_", country, ".RData"))
# susceptibility with R0 ~ 3 (R0 <- compute_R0(u, C))
#u_constant     <- rep(0.0154, 9) # constant # 0.0154 for Belgium
u_var     <- c(0.4, 0.38, 0.79, 0.86, 0.8, 0.82, 0.88, 0.74, 0.74)/38.1 # R0 = 2.6 for BEL, Ref: Davies
R0 <- compute_R0(u_constant, C)
# vaccine efficacy
v_e_constant <- get_v_e(p = 1, y0 = 1, hinge_age = 50)
v_e_var <- get_v_e(p = 0.5, y0 = 1, hinge_age = 50) # p is the final v_e % (as a decimal),  TODO: CHANGED y0 from 1 to 0.5
# serology
sero_none <- rep(0, 9) # no prior immunity
#sero_belgium <- c(0.052, 0.052, 0.076, 0.055, 0.063, 0.071, 0.038, 0.042, 0.1) # Ref: Herzog
sero_belgium <- c(0.03760, 0.08981, 0.07008, 0.05616,0.02732, 0.03709, 0.02071, 0.02646,0.03477) # Ref: Herzog
sero_NY <- c(0.32, 0.3129, 0.249, 0.249, 0.264, 0.279, 0.2575, 0.2215, 0.207)
# _____________________________________________________________________
# RUN SIM ----
# _____________________________________________________________________
# strategy options: "no vax", "all", "kids", "adults", "elderly"
# df_novax <- run_sim(C, 0, "no vax", u_var, v_e_constant)
# saveRDS(df_novax, "US_sim_novax.RData")
# * Simple model (US: everything constant besides IFR) ----
list_all      <- vector(mode = "list")
list_kids     <- vector(mode = "list")
list_adults   <- vector(mode = "list")
list_elderly  <- vector(mode = "list")
list_twentyplus   <- vector(mode = "list")
ptm <- proc.time()
for (i in seq(0, 50, by = 1)){
j <- i/100
list_all[[paste0(i)]] <- run_sim(C, percent_vax = j, strategy = "all", u = u_var)
list_kids[[paste0(i)]] <- run_sim(C, j, "kids", u_var)
list_adults[[paste0(i)]] <- run_sim(C, j, "adults", u_var)
list_elderly[[paste0(i)]] <- run_sim(C, j, "elderly", u_var)
list_twentyplus[[paste0(i)]] <- run_sim(C, j, "20+", u_var)
}
proc.time() - ptm
outcome <- "YLL"
plot_over_vax_avail(outcome, "None", list_all, list_kids, list_adults, list_elderly, list_twentyplus)
# Demographics
country <- "ESP"
C <- readRDS(paste0("C_", country, "_bytens_overall.RData"))
age_demo <- readRDS(paste0("age_demographics_", country,".RData"))
pop_total <- age_demo[10]
age_demo <- age_demo[1:9]
N_i <-  pop_total*age_demo
num_groups <- length(age_demo) # num age groups
IFR   <- c(9.530595e-04, 3.196070e-03, 1.071797e-02, 3.594256e-02, 1.205328e-01, 4.042049e-01, 1.355495e+00, 4.545632e+00,
1.524371e+01) # Ref: Levin
IFR   <- IFR/100 # as decimal
YLL_vec <- readRDS(paste0("yll_vec_", country, ".RData"))
# susceptibility with R0 ~ 3 (R0 <- compute_R0(u, C))
#u_constant     <- rep(0.0154, 9) # constant # 0.0154 for Belgium
u_var     <- c(0.4, 0.38, 0.79, 0.86, 0.8, 0.82, 0.88, 0.74, 0.74)/38.1 # R0 = 2.6 for BEL, Ref: Davies
R0 <- compute_R0(u_constant, C)
# vaccine efficacy
v_e_constant <- get_v_e(p = 1, y0 = 1, hinge_age = 50)
v_e_var <- get_v_e(p = 0.5, y0 = 1, hinge_age = 50) # p is the final v_e % (as a decimal),  TODO: CHANGED y0 from 1 to 0.5
# serology
sero_none <- rep(0, 9) # no prior immunity
#sero_belgium <- c(0.052, 0.052, 0.076, 0.055, 0.063, 0.071, 0.038, 0.042, 0.1) # Ref: Herzog
sero_belgium <- c(0.03760, 0.08981, 0.07008, 0.05616,0.02732, 0.03709, 0.02071, 0.02646,0.03477) # Ref: Herzog
sero_NY <- c(0.32, 0.3129, 0.249, 0.249, 0.264, 0.279, 0.2575, 0.2215, 0.207)
# _____________________________________________________________________
# RUN SIM ----
# _____________________________________________________________________
# strategy options: "no vax", "all", "kids", "adults", "elderly"
# df_novax <- run_sim(C, 0, "no vax", u_var, v_e_constant)
# saveRDS(df_novax, "US_sim_novax.RData")
# * Simple model (US: everything constant besides IFR) ----
list_all      <- vector(mode = "list")
list_kids     <- vector(mode = "list")
list_adults   <- vector(mode = "list")
list_elderly  <- vector(mode = "list")
list_twentyplus   <- vector(mode = "list")
ptm <- proc.time()
for (i in seq(0, 50, by = 1)){
j <- i/100
list_all[[paste0(i)]] <- run_sim(C, percent_vax = j, strategy = "all", u = u_var)
list_kids[[paste0(i)]] <- run_sim(C, j, "kids", u_var)
list_adults[[paste0(i)]] <- run_sim(C, j, "adults", u_var)
list_elderly[[paste0(i)]] <- run_sim(C, j, "elderly", u_var)
list_twentyplus[[paste0(i)]] <- run_sim(C, j, "20+", u_var)
}
proc.time() - ptm
outcome <- "YLL"
plot_over_vax_avail(outcome, "None", list_all, list_kids, list_adults, list_elderly, list_twentyplus)
country <- "ZWE"
C <- readRDS(paste0("C_", country, "_bytens_overall.RData"))
age_demo <- readRDS(paste0("age_demographics_", country,".RData"))
pop_total <- age_demo[10]
age_demo <- age_demo[1:9]
N_i <-  pop_total*age_demo
num_groups <- length(age_demo) # num age groups
IFR   <- c(9.530595e-04, 3.196070e-03, 1.071797e-02, 3.594256e-02, 1.205328e-01, 4.042049e-01, 1.355495e+00, 4.545632e+00,
1.524371e+01) # Ref: Levin
IFR   <- IFR/100 # as decimal
YLL_vec <- readRDS(paste0("yll_vec_", country, ".RData"))
# susceptibility with R0 ~ 3 (R0 <- compute_R0(u, C))
#u_constant     <- rep(0.0154, 9) # constant # 0.0154 for Belgium
u_var     <- c(0.4, 0.38, 0.79, 0.86, 0.8, 0.82, 0.88, 0.74, 0.74)/38.1 # R0 = 2.6 for BEL, Ref: Davies
R0 <- compute_R0(u_constant, C)
# vaccine efficacy
v_e_constant <- get_v_e(p = 1, y0 = 1, hinge_age = 50)
v_e_var <- get_v_e(p = 0.5, y0 = 1, hinge_age = 50) # p is the final v_e % (as a decimal),  TODO: CHANGED y0 from 1 to 0.5
# serology
sero_none <- rep(0, 9) # no prior immunity
#sero_belgium <- c(0.052, 0.052, 0.076, 0.055, 0.063, 0.071, 0.038, 0.042, 0.1) # Ref: Herzog
sero_belgium <- c(0.03760, 0.08981, 0.07008, 0.05616,0.02732, 0.03709, 0.02071, 0.02646,0.03477) # Ref: Herzog
sero_NY <- c(0.32, 0.3129, 0.249, 0.249, 0.264, 0.279, 0.2575, 0.2215, 0.207)
# _____________________________________________________________________
# RUN SIM ----
# _____________________________________________________________________
# strategy options: "no vax", "all", "kids", "adults", "elderly"
# df_novax <- run_sim(C, 0, "no vax", u_var, v_e_constant)
# saveRDS(df_novax, "US_sim_novax.RData")
# * Simple model (US: everything constant besides IFR) ----
list_all      <- vector(mode = "list")
list_kids     <- vector(mode = "list")
list_adults   <- vector(mode = "list")
list_elderly  <- vector(mode = "list")
list_twentyplus   <- vector(mode = "list")
ptm <- proc.time()
for (i in seq(0, 50, by = 1)){
j <- i/100
list_all[[paste0(i)]] <- run_sim(C, percent_vax = j, strategy = "all", u = u_var)
list_kids[[paste0(i)]] <- run_sim(C, j, "kids", u_var)
list_adults[[paste0(i)]] <- run_sim(C, j, "adults", u_var)
list_elderly[[paste0(i)]] <- run_sim(C, j, "elderly", u_var)
list_twentyplus[[paste0(i)]] <- run_sim(C, j, "20+", u_var)
}
proc.time() - ptm
outcome <- "YLL"
plot_over_vax_avail(outcome, "None", list_all, list_kids, list_adults, list_elderly, list_twentyplus)
country <- "POL"
C <- readRDS(paste0("C_", country, "_bytens_overall.RData"))
age_demo <- readRDS(paste0("age_demographics_", country,".RData"))
pop_total <- age_demo[10]
age_demo <- age_demo[1:9]
N_i <-  pop_total*age_demo
num_groups <- length(age_demo) # num age groups
IFR   <- c(9.530595e-04, 3.196070e-03, 1.071797e-02, 3.594256e-02, 1.205328e-01, 4.042049e-01, 1.355495e+00, 4.545632e+00,
1.524371e+01) # Ref: Levin
IFR   <- IFR/100 # as decimal
YLL_vec <- readRDS(paste0("yll_vec_", country, ".RData"))
# susceptibility with R0 ~ 3 (R0 <- compute_R0(u, C))
#u_constant     <- rep(0.0154, 9) # constant # 0.0154 for Belgium
u_var     <- c(0.4, 0.38, 0.79, 0.86, 0.8, 0.82, 0.88, 0.74, 0.74)/38.1 # R0 = 2.6 for BEL, Ref: Davies
R0 <- compute_R0(u_constant, C)
# vaccine efficacy
v_e_constant <- get_v_e(p = 1, y0 = 1, hinge_age = 50)
v_e_var <- get_v_e(p = 0.5, y0 = 1, hinge_age = 50) # p is the final v_e % (as a decimal),  TODO: CHANGED y0 from 1 to 0.5
# serology
sero_none <- rep(0, 9) # no prior immunity
#sero_belgium <- c(0.052, 0.052, 0.076, 0.055, 0.063, 0.071, 0.038, 0.042, 0.1) # Ref: Herzog
sero_belgium <- c(0.03760, 0.08981, 0.07008, 0.05616,0.02732, 0.03709, 0.02071, 0.02646,0.03477) # Ref: Herzog
sero_NY <- c(0.32, 0.3129, 0.249, 0.249, 0.264, 0.279, 0.2575, 0.2215, 0.207)
# _____________________________________________________________________
# RUN SIM ----
# _____________________________________________________________________
# strategy options: "no vax", "all", "kids", "adults", "elderly"
# df_novax <- run_sim(C, 0, "no vax", u_var, v_e_constant)
# saveRDS(df_novax, "US_sim_novax.RData")
# * Simple model (US: everything constant besides IFR) ----
list_all      <- vector(mode = "list")
list_kids     <- vector(mode = "list")
list_adults   <- vector(mode = "list")
list_elderly  <- vector(mode = "list")
list_twentyplus   <- vector(mode = "list")
ptm <- proc.time()
for (i in seq(0, 50, by = 1)){
j <- i/100
list_all[[paste0(i)]] <- run_sim(C, percent_vax = j, strategy = "all", u = u_var)
list_kids[[paste0(i)]] <- run_sim(C, j, "kids", u_var)
list_adults[[paste0(i)]] <- run_sim(C, j, "adults", u_var)
list_elderly[[paste0(i)]] <- run_sim(C, j, "elderly", u_var)
list_twentyplus[[paste0(i)]] <- run_sim(C, j, "20+", u_var)
}
proc.time() - ptm
outcome <- "YLL"
plot_over_vax_avail(outcome, "None", list_all, list_kids, list_adults, list_elderly, list_twentyplus)
country <- "IND"
C <- readRDS(paste0("C_", country, "_bytens_overall.RData"))
age_demo <- readRDS(paste0("age_demographics_", country,".RData"))
pop_total <- age_demo[10]
age_demo <- age_demo[1:9]
N_i <-  pop_total*age_demo
num_groups <- length(age_demo) # num age groups
IFR   <- c(9.530595e-04, 3.196070e-03, 1.071797e-02, 3.594256e-02, 1.205328e-01, 4.042049e-01, 1.355495e+00, 4.545632e+00,
1.524371e+01) # Ref: Levin
IFR   <- IFR/100 # as decimal
YLL_vec <- readRDS(paste0("yll_vec_", country, ".RData"))
# susceptibility with R0 ~ 3 (R0 <- compute_R0(u, C))
#u_constant     <- rep(0.0154, 9) # constant # 0.0154 for Belgium
u_var     <- c(0.4, 0.38, 0.79, 0.86, 0.8, 0.82, 0.88, 0.74, 0.74)/38.1 # R0 = 2.6 for BEL, Ref: Davies
R0 <- compute_R0(u_constant, C)
# vaccine efficacy
v_e_constant <- get_v_e(p = 1, y0 = 1, hinge_age = 50)
v_e_var <- get_v_e(p = 0.5, y0 = 1, hinge_age = 50) # p is the final v_e % (as a decimal),  TODO: CHANGED y0 from 1 to 0.5
# serology
sero_none <- rep(0, 9) # no prior immunity
#sero_belgium <- c(0.052, 0.052, 0.076, 0.055, 0.063, 0.071, 0.038, 0.042, 0.1) # Ref: Herzog
sero_belgium <- c(0.03760, 0.08981, 0.07008, 0.05616,0.02732, 0.03709, 0.02071, 0.02646,0.03477) # Ref: Herzog
sero_NY <- c(0.32, 0.3129, 0.249, 0.249, 0.264, 0.279, 0.2575, 0.2215, 0.207)
# _____________________________________________________________________
# RUN SIM ----
# _____________________________________________________________________
# strategy options: "no vax", "all", "kids", "adults", "elderly"
# df_novax <- run_sim(C, 0, "no vax", u_var, v_e_constant)
# saveRDS(df_novax, "US_sim_novax.RData")
# * Simple model (US: everything constant besides IFR) ----
list_all      <- vector(mode = "list")
list_kids     <- vector(mode = "list")
list_adults   <- vector(mode = "list")
list_elderly  <- vector(mode = "list")
list_twentyplus   <- vector(mode = "list")
ptm <- proc.time()
for (i in seq(0, 50, by = 1)){
j <- i/100
list_all[[paste0(i)]] <- run_sim(C, percent_vax = j, strategy = "all", u = u_var)
list_kids[[paste0(i)]] <- run_sim(C, j, "kids", u_var)
list_adults[[paste0(i)]] <- run_sim(C, j, "adults", u_var)
list_elderly[[paste0(i)]] <- run_sim(C, j, "elderly", u_var)
list_twentyplus[[paste0(i)]] <- run_sim(C, j, "20+", u_var)
}
proc.time() - ptm
outcome <- "YLL"
plot_over_vax_avail(outcome, "None", list_all, list_kids, list_adults, list_elderly, list_twentyplus)
# Demographics
country <- "CHN"
C <- readRDS(paste0("C_", country, "_bytens_overall.RData"))
age_demo <- readRDS(paste0("age_demographics_", country,".RData"))
pop_total <- age_demo[10]
age_demo <- age_demo[1:9]
N_i <-  pop_total*age_demo
num_groups <- length(age_demo) # num age groups
IFR   <- c(9.530595e-04, 3.196070e-03, 1.071797e-02, 3.594256e-02, 1.205328e-01, 4.042049e-01, 1.355495e+00, 4.545632e+00,
1.524371e+01) # Ref: Levin
IFR   <- IFR/100 # as decimal
YLL_vec <- readRDS(paste0("yll_vec_", country, ".RData"))
# susceptibility with R0 ~ 3 (R0 <- compute_R0(u, C))
#u_constant     <- rep(0.0154, 9) # constant # 0.0154 for Belgium
u_var     <- c(0.4, 0.38, 0.79, 0.86, 0.8, 0.82, 0.88, 0.74, 0.74)/38.1 # R0 = 2.6 for BEL, Ref: Davies
R0 <- compute_R0(u_constant, C)
# vaccine efficacy
v_e_constant <- get_v_e(p = 1, y0 = 1, hinge_age = 50)
v_e_var <- get_v_e(p = 0.5, y0 = 1, hinge_age = 50) # p is the final v_e % (as a decimal),  TODO: CHANGED y0 from 1 to 0.5
# serology
sero_none <- rep(0, 9) # no prior immunity
#sero_belgium <- c(0.052, 0.052, 0.076, 0.055, 0.063, 0.071, 0.038, 0.042, 0.1) # Ref: Herzog
sero_belgium <- c(0.03760, 0.08981, 0.07008, 0.05616,0.02732, 0.03709, 0.02071, 0.02646,0.03477) # Ref: Herzog
sero_NY <- c(0.32, 0.3129, 0.249, 0.249, 0.264, 0.279, 0.2575, 0.2215, 0.207)
# _____________________________________________________________________
# RUN SIM ----
# _____________________________________________________________________
# strategy options: "no vax", "all", "kids", "adults", "elderly"
# df_novax <- run_sim(C, 0, "no vax", u_var, v_e_constant)
# saveRDS(df_novax, "US_sim_novax.RData")
# * Simple model (US: everything constant besides IFR) ----
list_all      <- vector(mode = "list")
list_kids     <- vector(mode = "list")
list_adults   <- vector(mode = "list")
list_elderly  <- vector(mode = "list")
list_twentyplus   <- vector(mode = "list")
ptm <- proc.time()
for (i in seq(0, 50, by = 1)){
j <- i/100
list_all[[paste0(i)]] <- run_sim(C, percent_vax = j, strategy = "all", u = u_var)
list_kids[[paste0(i)]] <- run_sim(C, j, "kids", u_var)
list_adults[[paste0(i)]] <- run_sim(C, j, "adults", u_var)
list_elderly[[paste0(i)]] <- run_sim(C, j, "elderly", u_var)
list_twentyplus[[paste0(i)]] <- run_sim(C, j, "20+", u_var)
}
proc.time() - ptm
outcome <- "YLL"
plot_over_vax_avail(outcome, "None", list_all, list_kids, list_adults, list_elderly, list_twentyplus)
