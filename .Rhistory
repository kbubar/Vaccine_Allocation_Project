for (i in list_all_sero_test){
total_cases[count] <- compute_total_cases(i)
total_deaths[count] <- compute_total_deaths(i)
count <- count + 1
}
for (i in list_kids_sero_notest){
total_cases[count] <- compute_total_cases(i)
total_deaths[count] <- compute_total_deaths(i)
count <- count + 1
}
for (i in list_kids_sero_test){
total_cases[count] <- compute_total_cases(i)
total_deaths[count] <- compute_total_deaths(i)
count <- count + 1
}
for (i in list_adults_sero_notest){
total_cases[count] <- compute_total_cases(i)
total_deaths[count] <- compute_total_deaths(i)
count <- count + 1
}
for (i in list_adults_sero_test){
total_cases[count] <- compute_total_cases(i)
total_deaths[count] <- compute_total_deaths(i)
count <- count + 1
}
for (i in list_elderly_sero_notest){
total_cases[count] <- compute_total_cases(i)
total_deaths[count] <- compute_total_deaths(i)
count <- count + 1
}
for (i in list_elderly_sero_test){
total_cases[count] <- compute_total_cases(i)
total_deaths[count] <- compute_total_deaths(i)
count <- count + 1
}
for (i in list_twentyplus_sero_notest){
total_cases[count] <- compute_total_cases(i)
total_deaths[count] <- compute_total_deaths(i)
count <- count + 1
}
for (i in list_twentyplus_sero_test){
total_cases[count] <- compute_total_cases(i)
total_deaths[count] <- compute_total_deaths(i)
count <- count + 1
}
num_strategies <- 5
vax_avail <- c(rep(seq(0, 50, by = 1), num_strategies*2))
num_per_list <- 51
strat <- c(rep("all", num_per_list*2), rep("kids", num_per_list*2),
rep("adults", num_per_list*2), rep("elderly", num_per_list*2),
rep("twentyplus", num_per_list*2))
temp <-  c(rep("notest", num_per_list), rep("test", num_per_list))
variable <- c(rep(temp, num_strategies))
theme_set(theme_minimal(base_size = 26))
percent_kids <- round(sum(age_demo[1:2])*100)
percent_elderly <- round(sum(age_demo[7:9])*100)
percent_adults <- round(sum(age_demo[3:5])*100)
percent_twentyplus <- round(sum(age_demo[3:9])*100)
if (outcome == "cases"){
baseline_cases_notest <- compute_total_cases(list_all_sero_notest$`0`)
baseline_cases_test <- compute_total_cases(list_all_sero_test$`0`)
temp <- c(rep(baseline_cases_notest, num_per_list), rep(baseline_cases_test, num_per_list))
baseline_cases <- c(rep(temp, num_strategies))
reduction_in_cases <- (1-(total_cases/baseline_cases))*100
df <- data.frame(vax_avail, strat, reduction_in_cases, variable)
# for Belgium sero
df[df$strat == "kids" & vax_avail > 23 & variable == "notest", ]$reduction_in_cases = NA
df[df$strat == "kids" & vax_avail > 22 & variable == "test", ]$reduction_in_cases = NA
df[df$strat == "elderly" & vax_avail > 26 & variable == "notest", ]$reduction_in_cases = NA
df[df$strat == "elderly" & vax_avail > 25 & variable == "test", ]$reduction_in_cases = NA
df[df$strat == "adults" & vax_avail > 38 & variable == "notest", ]$reduction_in_cases = NA
df[df$strat == "adults" & vax_avail > 36 & variable == "test", ]$reduction_in_cases = NA
# ## for NY sero
# df[df$strat == "kids" & vax_avail > percent_kids & variable == "notest", ]$reduction_in_cases = NA
# df[df$strat == "kids" & vax_avail > 18 & variable == "test", ]$reduction_in_cases = NA
# df[df$strat == "elderly" & vax_avail > percent_elderly & variable == "notest", ]$reduction_in_cases = NA
# df[df$strat == "elderly" & vax_avail > 18 & variable == "test", ]$reduction_in_cases = NA
# df[df$strat == "adults" & vax_avail > percent_adults & variable == "notest", ]$reduction_in_cases = NA
# df[df$strat == "adults" & vax_avail > 30 & variable == "test", ]$reduction_in_cases = NA
# df[df$strat == "all" & vax_avail > 37 & variable == "test", ]$reduction_in_cases = NA
#df <- df[df$strat == strat_to_plot, ]
ggplot(df, aes(x = vax_avail, y = reduction_in_cases, col = strat)) +
geom_line(aes(linetype = variable), size = 1.2, alpha = 0.9) +
xlab("Total vaccine supply (% of pop)") +
ylab("Reduction in infections (%)") +
scale_linetype_discrete(name = "Scenario",
labels = c("w/o sero tests", "w/ sero tests"))+
theme(
#legend.text = element_text(size=22),
#legend.title = element_text(size=22),
legend.position = "none",
axis.title.x = element_blank(),
#axis.text.y  = element_blank(),
#axis.text.x = element_text(size = 17),
axis.text.x = element_blank(),
#axis.title.y = element_blank(),
plot.title = element_blank()) +
scale_y_continuous(expand = c(0,0), limit = c(0, 100)) +
scale_x_continuous(expand = c(0,0), limit = c(0, 50), breaks = c(0,10, 20, 30, 40, 50)) +
scale_color_brewer(palette = "Dark2", name = "Allocation Strategy",
labels =  c("Adults 20-49", "All Ages", "Adults 60+",
"Under 20", "Adults 20+", "Optimal")) +
guides(colour = guide_legend(override.aes = list(size=6)))
}
else if (outcome == "deaths"){
baseline_deaths_notest <- compute_total_deaths(list_all_sero_notest$`0`)
baseline_deaths_test <- compute_total_deaths(list_all_sero_test$`0`)
temp <- c(rep(baseline_deaths_notest, num_per_list), rep(baseline_deaths_test, num_per_list))
baseline_deaths <- c(rep(temp, num_strategies))
reduction_in_deaths <- (1-(total_deaths/baseline_deaths))*100
df <- data.frame(vax_avail, strat, reduction_in_deaths, variable)
# for Belgium sero
df[df$strat == "kids" & vax_avail > 23 & variable == "notest", ]$reduction_in_deaths = NA
df[df$strat == "kids" & vax_avail > 22 & variable == "test", ]$reduction_in_deaths = NA
df[df$strat == "elderly" & vax_avail > 26 & variable == "notest", ]$reduction_in_deaths = NA
df[df$strat == "elderly" & vax_avail > 25 & variable == "test", ]$reduction_in_deaths = NA
df[df$strat == "adults" & vax_avail > 38 & variable == "notest", ]$reduction_in_deaths = NA
df[df$strat == "adults" & vax_avail > 36 & variable == "test", ]$reduction_in_deaths = NA
# ## for NY sero
# df[df$strat == "kids" & vax_avail > percent_kids & variable == "notest", ]$reduction_in_deaths = NA
# df[df$strat == "kids" & vax_avail > 18 & variable == "test", ]$reduction_in_deaths = NA
# df[df$strat == "elderly" & vax_avail > percent_elderly & variable == "notest", ]$reduction_in_deaths = NA
# df[df$strat == "elderly" & vax_avail > 18 & variable == "test", ]$reduction_in_deaths = NA
# df[df$strat == "adults" & vax_avail > percent_adults & variable == "notest", ]$reduction_in_deaths = NA
# df[df$strat == "adults" & vax_avail > 30 & variable == "test", ]$reduction_in_deaths = NA
# df[df$strat == "all" & vax_avail > 37 & variable == "test", ]$reduction_in_deaths = NA
#df <- df[df$strat == strat_to_plot, ]
ggplot(df, aes(x = vax_avail, y = reduction_in_deaths, col = strat)) +
geom_line(aes(linetype = variable), size = 1.2, alpha = 0.9) +
xlab("Total vaccine supply (% of pop)") +
ylab("Reduction in deaths (%)") +
scale_linetype_discrete(name = "Scenario",
labels = c("W/o sero tests", "W/ sero tests")) +
scale_y_continuous(expand = c(0,0), limit = c(0, 100)) +
scale_x_continuous(expand = c(0,0), limit = c(0, 50), breaks = c(0,10, 20, 30, 40, 50)) +
theme(legend.position = "none",
axis.title.x = element_blank(),
axis.text.x  = element_blank(),
#axis.text.y  = element_blank(),
#axis.title.y = element_blank(),
plot.title = element_text(color = this_color, size = 17)) +
scale_color_brewer(palette = "Dark2", name = "Allocation Strategy",
labels =  c("Young Adults (20-49)", "All Ages", "Elderly (60+)",
"Children (0-19)", "Adults (20+)", "Optimal")) +
guides(colour = guide_legend(override.aes = list(size=6)))
#ggtitle(plot_title)
}
}
outcome <- "deaths"
pB1 <-  plot_serotesting_over_vax_avail(outcome, "kids", col_kids)
# pB2 <-  plot_serotesting_over_vax_avail(outcome, "young adults", col_youngadults)
# pB3 <-  plot_serotesting_over_vax_avail(outcome, "adults", col_adults)
# pB4 <-  plot_serotesting_over_vax_avail(outcome, "elderly", col_elderly)
# pB5 <-  plot_serotesting_over_vax_avail(outcome, "all", col_all)
outcome = "cases"
pD1 <-  plot_serotesting_over_vax_avail(outcome, "kids", col_kids)
# NY sero
grid.arrange(pB1, pD1, ncol = 2)
plot_serotesting_over_vax_avail = function(outcome, strat_to_plot, mycol){
# plots comparison of testing v no testing
if (strat_to_plot == "all"){plot_title <- "All Ages"
this_color = col_all
} else if (strat_to_plot == "kids"){plot_title <- "Children (0-19)"
this_color = col_kids
} else if (strat_to_plot == "young adults"){plot_title <- "Young Adults (20-49)"
this_color = col_youngadults
} else if (strat_to_plot == "elderly"){plot_title <- "Elderly (60+)"
this_color = col_elderly
} else if (strat_to_plot == "adults"){plot_title <- "Adults (20+)"
this_color = col_adults
}
total_cases <- rep(NA, 510)
total_deaths <- rep(NA, 510)
count <- 1
for (i in list_all_sero_notest){
total_cases[count] <- compute_total_cases(i)
total_deaths[count] <- compute_total_deaths(i)
count <- count + 1
}
for (i in list_all_sero_test){
total_cases[count] <- compute_total_cases(i)
total_deaths[count] <- compute_total_deaths(i)
count <- count + 1
}
for (i in list_kids_sero_notest){
total_cases[count] <- compute_total_cases(i)
total_deaths[count] <- compute_total_deaths(i)
count <- count + 1
}
for (i in list_kids_sero_test){
total_cases[count] <- compute_total_cases(i)
total_deaths[count] <- compute_total_deaths(i)
count <- count + 1
}
for (i in list_adults_sero_notest){
total_cases[count] <- compute_total_cases(i)
total_deaths[count] <- compute_total_deaths(i)
count <- count + 1
}
for (i in list_adults_sero_test){
total_cases[count] <- compute_total_cases(i)
total_deaths[count] <- compute_total_deaths(i)
count <- count + 1
}
for (i in list_elderly_sero_notest){
total_cases[count] <- compute_total_cases(i)
total_deaths[count] <- compute_total_deaths(i)
count <- count + 1
}
for (i in list_elderly_sero_test){
total_cases[count] <- compute_total_cases(i)
total_deaths[count] <- compute_total_deaths(i)
count <- count + 1
}
for (i in list_twentyplus_sero_notest){
total_cases[count] <- compute_total_cases(i)
total_deaths[count] <- compute_total_deaths(i)
count <- count + 1
}
for (i in list_twentyplus_sero_test){
total_cases[count] <- compute_total_cases(i)
total_deaths[count] <- compute_total_deaths(i)
count <- count + 1
}
num_strategies <- 5
vax_avail <- c(rep(seq(0, 50, by = 1), num_strategies*2))
num_per_list <- 51
strat <- c(rep("all", num_per_list*2), rep("kids", num_per_list*2),
rep("adults", num_per_list*2), rep("elderly", num_per_list*2),
rep("twentyplus", num_per_list*2))
temp <-  c(rep("notest", num_per_list), rep("test", num_per_list))
variable <- c(rep(temp, num_strategies))
theme_set(theme_minimal(base_size = 26))
percent_kids <- round(sum(age_demo[1:2])*100)
percent_elderly <- round(sum(age_demo[7:9])*100)
percent_adults <- round(sum(age_demo[3:5])*100)
percent_twentyplus <- round(sum(age_demo[3:9])*100)
if (outcome == "cases"){
baseline_cases_notest <- compute_total_cases(list_all_sero_notest$`0`)
baseline_cases_test <- compute_total_cases(list_all_sero_test$`0`)
temp <- c(rep(baseline_cases_notest, num_per_list), rep(baseline_cases_test, num_per_list))
baseline_cases <- c(rep(temp, num_strategies))
reduction_in_cases <- (1-(total_cases/baseline_cases))*100
df <- data.frame(vax_avail, strat, reduction_in_cases, variable)
# for Belgium sero
df[df$strat == "kids" & vax_avail > 23 & variable == "notest", ]$reduction_in_cases = NA
df[df$strat == "kids" & vax_avail > 22 & variable == "test", ]$reduction_in_cases = NA
df[df$strat == "elderly" & vax_avail > 26 & variable == "notest", ]$reduction_in_cases = NA
df[df$strat == "elderly" & vax_avail > 25 & variable == "test", ]$reduction_in_cases = NA
df[df$strat == "adults" & vax_avail > 38 & variable == "notest", ]$reduction_in_cases = NA
df[df$strat == "adults" & vax_avail > 36 & variable == "test", ]$reduction_in_cases = NA
# ## for NY sero
# df[df$strat == "kids" & vax_avail > percent_kids & variable == "notest", ]$reduction_in_cases = NA
# df[df$strat == "kids" & vax_avail > 18 & variable == "test", ]$reduction_in_cases = NA
# df[df$strat == "elderly" & vax_avail > percent_elderly & variable == "notest", ]$reduction_in_cases = NA
# df[df$strat == "elderly" & vax_avail > 18 & variable == "test", ]$reduction_in_cases = NA
# df[df$strat == "adults" & vax_avail > percent_adults & variable == "notest", ]$reduction_in_cases = NA
# df[df$strat == "adults" & vax_avail > 30 & variable == "test", ]$reduction_in_cases = NA
# df[df$strat == "all" & vax_avail > 37 & variable == "test", ]$reduction_in_cases = NA
#df <- df[df$strat == strat_to_plot, ]
ggplot(df, aes(x = vax_avail, y = reduction_in_cases, col = strat)) +
geom_line(aes(linetype = variable), size = 1.2, alpha = 0.9) +
xlab("Total vaccine supply (% of pop)") +
ylab("Reduction in infections (%)") +
scale_linetype_discrete(name = "Scenario",
labels = c("w/o sero tests", "w/ sero tests"))+
theme(
#legend.text = element_text(size=22),
#legend.title = element_text(size=22),
legend.position = "none",
axis.title.x = element_blank(),
#axis.text.y  = element_blank(),
#axis.text.x = element_text(size = 17),
axis.text.x = element_blank(),
axis.title.y = element_blank(),
plot.title = element_blank()) +
scale_y_continuous(expand = c(0,0), limit = c(0, 100)) +
scale_x_continuous(expand = c(0,0), limit = c(0, 50), breaks = c(0,10, 20, 30, 40, 50)) +
scale_color_brewer(palette = "Dark2", name = "Allocation Strategy",
labels =  c("Adults 20-49", "All Ages", "Adults 60+",
"Under 20", "Adults 20+", "Optimal")) +
guides(colour = guide_legend(override.aes = list(size=6)))
}
else if (outcome == "deaths"){
baseline_deaths_notest <- compute_total_deaths(list_all_sero_notest$`0`)
baseline_deaths_test <- compute_total_deaths(list_all_sero_test$`0`)
temp <- c(rep(baseline_deaths_notest, num_per_list), rep(baseline_deaths_test, num_per_list))
baseline_deaths <- c(rep(temp, num_strategies))
reduction_in_deaths <- (1-(total_deaths/baseline_deaths))*100
df <- data.frame(vax_avail, strat, reduction_in_deaths, variable)
# for Belgium sero
df[df$strat == "kids" & vax_avail > 23 & variable == "notest", ]$reduction_in_deaths = NA
df[df$strat == "kids" & vax_avail > 22 & variable == "test", ]$reduction_in_deaths = NA
df[df$strat == "elderly" & vax_avail > 26 & variable == "notest", ]$reduction_in_deaths = NA
df[df$strat == "elderly" & vax_avail > 25 & variable == "test", ]$reduction_in_deaths = NA
df[df$strat == "adults" & vax_avail > 38 & variable == "notest", ]$reduction_in_deaths = NA
df[df$strat == "adults" & vax_avail > 36 & variable == "test", ]$reduction_in_deaths = NA
# ## for NY sero
# df[df$strat == "kids" & vax_avail > percent_kids & variable == "notest", ]$reduction_in_deaths = NA
# df[df$strat == "kids" & vax_avail > 18 & variable == "test", ]$reduction_in_deaths = NA
# df[df$strat == "elderly" & vax_avail > percent_elderly & variable == "notest", ]$reduction_in_deaths = NA
# df[df$strat == "elderly" & vax_avail > 18 & variable == "test", ]$reduction_in_deaths = NA
# df[df$strat == "adults" & vax_avail > percent_adults & variable == "notest", ]$reduction_in_deaths = NA
# df[df$strat == "adults" & vax_avail > 30 & variable == "test", ]$reduction_in_deaths = NA
# df[df$strat == "all" & vax_avail > 37 & variable == "test", ]$reduction_in_deaths = NA
#df <- df[df$strat == strat_to_plot, ]
ggplot(df, aes(x = vax_avail, y = reduction_in_deaths, col = strat)) +
geom_line(aes(linetype = variable), size = 1.2, alpha = 0.9) +
xlab("Total vaccine supply (% of pop)") +
ylab("Reduction in deaths (%)") +
scale_linetype_discrete(name = "Scenario",
labels = c("W/o sero tests", "W/ sero tests")) +
scale_y_continuous(expand = c(0,0), limit = c(0, 100)) +
scale_x_continuous(expand = c(0,0), limit = c(0, 50), breaks = c(0,10, 20, 30, 40, 50)) +
theme(legend.position = "none",
axis.title.x = element_blank(),
axis.text.x  = element_blank(),
#axis.text.y  = element_blank(),
axis.title.y = element_blank(),
plot.title = element_text(color = this_color, size = 17)) +
scale_color_brewer(palette = "Dark2", name = "Allocation Strategy",
labels =  c("Young Adults (20-49)", "All Ages", "Elderly (60+)",
"Children (0-19)", "Adults (20+)", "Optimal")) +
guides(colour = guide_legend(override.aes = list(size=6)))
#ggtitle(plot_title)
}
}
outcome <- "deaths"
pB1 <-  plot_serotesting_over_vax_avail(outcome, "kids", col_kids)
# pB2 <-  plot_serotesting_over_vax_avail(outcome, "young adults", col_youngadults)
# pB3 <-  plot_serotesting_over_vax_avail(outcome, "adults", col_adults)
# pB4 <-  plot_serotesting_over_vax_avail(outcome, "elderly", col_elderly)
# pB5 <-  plot_serotesting_over_vax_avail(outcome, "all", col_all)
outcome = "cases"
pD1 <-  plot_serotesting_over_vax_avail(outcome, "kids", col_kids)
# NY sero
grid.arrange(pB1, pD1, ncol = 2)
plot_serotesting_over_vax_avail = function(outcome, strat_to_plot, mycol){
# plots comparison of testing v no testing
if (strat_to_plot == "all"){plot_title <- "All Ages"
this_color = col_all
} else if (strat_to_plot == "kids"){plot_title <- "Children (0-19)"
this_color = col_kids
} else if (strat_to_plot == "young adults"){plot_title <- "Young Adults (20-49)"
this_color = col_youngadults
} else if (strat_to_plot == "elderly"){plot_title <- "Elderly (60+)"
this_color = col_elderly
} else if (strat_to_plot == "adults"){plot_title <- "Adults (20+)"
this_color = col_adults
}
total_cases <- rep(NA, 510)
total_deaths <- rep(NA, 510)
count <- 1
for (i in list_all_sero_notest){
total_cases[count] <- compute_total_cases(i)
total_deaths[count] <- compute_total_deaths(i)
count <- count + 1
}
for (i in list_all_sero_test){
total_cases[count] <- compute_total_cases(i)
total_deaths[count] <- compute_total_deaths(i)
count <- count + 1
}
for (i in list_kids_sero_notest){
total_cases[count] <- compute_total_cases(i)
total_deaths[count] <- compute_total_deaths(i)
count <- count + 1
}
for (i in list_kids_sero_test){
total_cases[count] <- compute_total_cases(i)
total_deaths[count] <- compute_total_deaths(i)
count <- count + 1
}
for (i in list_adults_sero_notest){
total_cases[count] <- compute_total_cases(i)
total_deaths[count] <- compute_total_deaths(i)
count <- count + 1
}
for (i in list_adults_sero_test){
total_cases[count] <- compute_total_cases(i)
total_deaths[count] <- compute_total_deaths(i)
count <- count + 1
}
for (i in list_elderly_sero_notest){
total_cases[count] <- compute_total_cases(i)
total_deaths[count] <- compute_total_deaths(i)
count <- count + 1
}
for (i in list_elderly_sero_test){
total_cases[count] <- compute_total_cases(i)
total_deaths[count] <- compute_total_deaths(i)
count <- count + 1
}
for (i in list_twentyplus_sero_notest){
total_cases[count] <- compute_total_cases(i)
total_deaths[count] <- compute_total_deaths(i)
count <- count + 1
}
for (i in list_twentyplus_sero_test){
total_cases[count] <- compute_total_cases(i)
total_deaths[count] <- compute_total_deaths(i)
count <- count + 1
}
num_strategies <- 5
vax_avail <- c(rep(seq(0, 50, by = 1), num_strategies*2))
num_per_list <- 51
strat <- c(rep("all", num_per_list*2), rep("kids", num_per_list*2),
rep("adults", num_per_list*2), rep("elderly", num_per_list*2),
rep("twentyplus", num_per_list*2))
temp <-  c(rep("notest", num_per_list), rep("test", num_per_list))
variable <- c(rep(temp, num_strategies))
theme_set(theme_minimal(base_size = 26))
percent_kids <- round(sum(age_demo[1:2])*100)
percent_elderly <- round(sum(age_demo[7:9])*100)
percent_adults <- round(sum(age_demo[3:5])*100)
percent_twentyplus <- round(sum(age_demo[3:9])*100)
if (outcome == "cases"){
baseline_cases_notest <- compute_total_cases(list_all_sero_notest$`0`)
baseline_cases_test <- compute_total_cases(list_all_sero_test$`0`)
temp <- c(rep(baseline_cases_notest, num_per_list), rep(baseline_cases_test, num_per_list))
baseline_cases <- c(rep(temp, num_strategies))
reduction_in_cases <- (1-(total_cases/baseline_cases))*100
df <- data.frame(vax_avail, strat, reduction_in_cases, variable)
# for Belgium sero
df[df$strat == "kids" & vax_avail > 23 & variable == "notest", ]$reduction_in_cases = NA
df[df$strat == "kids" & vax_avail > 22 & variable == "test", ]$reduction_in_cases = NA
df[df$strat == "elderly" & vax_avail > 26 & variable == "notest", ]$reduction_in_cases = NA
df[df$strat == "elderly" & vax_avail > 25 & variable == "test", ]$reduction_in_cases = NA
df[df$strat == "adults" & vax_avail > 38 & variable == "notest", ]$reduction_in_cases = NA
df[df$strat == "adults" & vax_avail > 36 & variable == "test", ]$reduction_in_cases = NA
# ## for NY sero
# df[df$strat == "kids" & vax_avail > percent_kids & variable == "notest", ]$reduction_in_cases = NA
# df[df$strat == "kids" & vax_avail > 18 & variable == "test", ]$reduction_in_cases = NA
# df[df$strat == "elderly" & vax_avail > percent_elderly & variable == "notest", ]$reduction_in_cases = NA
# df[df$strat == "elderly" & vax_avail > 18 & variable == "test", ]$reduction_in_cases = NA
# df[df$strat == "adults" & vax_avail > percent_adults & variable == "notest", ]$reduction_in_cases = NA
# df[df$strat == "adults" & vax_avail > 30 & variable == "test", ]$reduction_in_cases = NA
# df[df$strat == "all" & vax_avail > 37 & variable == "test", ]$reduction_in_cases = NA
#df <- df[df$strat == strat_to_plot, ]
ggplot(df, aes(x = vax_avail, y = reduction_in_cases, col = strat)) +
geom_line(aes(linetype = variable), size = 1.2, alpha = 0.9) +
xlab("Total vaccine supply (% of pop)") +
ylab("Reduction in infections (%)") +
scale_linetype_discrete(name = "Scenario",
labels = c("w/o sero tests", "w/ sero tests"))+
theme(
#legend.text = element_text(size=22),
#legend.title = element_text(size=22),
legend.position = "none",
#axis.title.x = element_blank(),
axis.text.y  = element_blank(),
axis.text.x = element_text(size = 17),
#axis.text.x = element_blank(),
axis.title.y = element_blank(),
plot.title = element_blank()) +
scale_y_continuous(expand = c(0,0), limit = c(0, 100)) +
scale_x_continuous(expand = c(0,0), limit = c(0, 50), breaks = c(0,10, 20, 30, 40, 50)) +
scale_color_brewer(palette = "Dark2", name = "Allocation Strategy",
labels =  c("Adults 20-49", "All Ages", "Adults 60+",
"Under 20", "Adults 20+", "Optimal")) +
guides(colour = guide_legend(override.aes = list(size=6)))
}
else if (outcome == "deaths"){
baseline_deaths_notest <- compute_total_deaths(list_all_sero_notest$`0`)
baseline_deaths_test <- compute_total_deaths(list_all_sero_test$`0`)
temp <- c(rep(baseline_deaths_notest, num_per_list), rep(baseline_deaths_test, num_per_list))
baseline_deaths <- c(rep(temp, num_strategies))
reduction_in_deaths <- (1-(total_deaths/baseline_deaths))*100
df <- data.frame(vax_avail, strat, reduction_in_deaths, variable)
# for Belgium sero
df[df$strat == "kids" & vax_avail > 23 & variable == "notest", ]$reduction_in_deaths = NA
df[df$strat == "kids" & vax_avail > 22 & variable == "test", ]$reduction_in_deaths = NA
df[df$strat == "elderly" & vax_avail > 26 & variable == "notest", ]$reduction_in_deaths = NA
df[df$strat == "elderly" & vax_avail > 25 & variable == "test", ]$reduction_in_deaths = NA
df[df$strat == "adults" & vax_avail > 38 & variable == "notest", ]$reduction_in_deaths = NA
df[df$strat == "adults" & vax_avail > 36 & variable == "test", ]$reduction_in_deaths = NA
# ## for NY sero
# df[df$strat == "kids" & vax_avail > percent_kids & variable == "notest", ]$reduction_in_deaths = NA
# df[df$strat == "kids" & vax_avail > 18 & variable == "test", ]$reduction_in_deaths = NA
# df[df$strat == "elderly" & vax_avail > percent_elderly & variable == "notest", ]$reduction_in_deaths = NA
# df[df$strat == "elderly" & vax_avail > 18 & variable == "test", ]$reduction_in_deaths = NA
# df[df$strat == "adults" & vax_avail > percent_adults & variable == "notest", ]$reduction_in_deaths = NA
# df[df$strat == "adults" & vax_avail > 30 & variable == "test", ]$reduction_in_deaths = NA
# df[df$strat == "all" & vax_avail > 37 & variable == "test", ]$reduction_in_deaths = NA
#df <- df[df$strat == strat_to_plot, ]
ggplot(df, aes(x = vax_avail, y = reduction_in_deaths, col = strat)) +
geom_line(aes(linetype = variable), size = 1.2, alpha = 0.9) +
xlab("Total vaccine supply (% of pop)") +
ylab("Reduction in deaths (%)") +
scale_linetype_discrete(name = "Scenario",
labels = c("W/o sero tests", "W/ sero tests")) +
scale_y_continuous(expand = c(0,0), limit = c(0, 100)) +
scale_x_continuous(expand = c(0,0), limit = c(0, 50), breaks = c(0,10, 20, 30, 40, 50)) +
theme(legend.position = "none",
axis.title.x = element_blank(),
axis.text.x  = element_blank(),
axis.text.y  = element_blank(),
axis.title.y = element_blank(),
plot.title = element_text(color = this_color, size = 17)) +
scale_color_brewer(palette = "Dark2", name = "Allocation Strategy",
labels =  c("Young Adults (20-49)", "All Ages", "Elderly (60+)",
"Children (0-19)", "Adults (20+)", "Optimal")) +
guides(colour = guide_legend(override.aes = list(size=6)))
#ggtitle(plot_title)
}
}
outcome <- "deaths"
pB1 <-  plot_serotesting_over_vax_avail(outcome, "kids", col_kids)
plot(pB1)
outcome = "cases"
pD1 <-  plot_serotesting_over_vax_avail(outcome, "kids", col_kids)
plot(pD1)
