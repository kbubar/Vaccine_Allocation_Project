percent_kids <- round(sum(age_demo[1:2])*100)
percent_elderly <- round(sum(age_demo[7:9])*100)
percent_adults <- round(sum(age_demo[3:5])*100)
percent_twentyplus <- round(sum(age_demo[3:9])*100)
if (outcome == "cases"){
df <- get_reduction_in_cases_df(list_all_var, list_kids_var, list_adults_var, list_elderly_var, list_twentyplus_var)
#df <- rbind(df[df$variable == "var", ], optimal_df_C[optimal_df_C$variable == "var", ])
if (percent_kids < 50){df[df$strat == "kids" & df$vax_avail > percent_kids, ]$reduction_in_cases = NA}
if (percent_elderly < 50) {df[df$strat == "elderly" & df$vax_avail > percent_elderly, ]$reduction_in_cases = NA}
if (percent_adults < 50) {df[df$strat == "adults" & df$vax_avail > percent_adults, ]$reduction_in_cases = NA}
if (percent_twentyplus < 50) {df[df$strat == "twentyplus" & df$vax_avail > percent_twentyplus, ]$reduction_in_cases = NA}
ggplot(df, aes(x = vax_avail, y = reduction_in_cases, col = strat, fill = strat)) +
geom_line(aes(linetype = variable), size = 2, alpha = 1) +
xlab("Total vaccine supply (% of pop)") +
ylab("Reduction in infections (%)") +
scale_color_brewer(palette = "Dark2", name = "Allocation Strategy",
labels =  c("Young Adults (20-49)", "All Ages", "Elderly (60+)",
"Children (0-19)", "Adults (20+)", "Optimal")) +
scale_linetype_discrete(name = var_name) +
#labels = c("Constant", "Age-dependent"))+
scale_y_continuous(expand = c(0,0), limit = c(0, 101)) +
scale_x_continuous(expand = c(0,0), limit = c(0, 50)) +#, breaks = c(0,25,50)) +
# geom_abline(slope = 1, intercept = 0, size = 1, linetype = "solid", alpha = 0.2) +
theme(legend.position = "none") +
#axis.title.x = element_blank(),
#axis.title.y = element_blank()) +
guides(colour = guide_legend(override.aes = list(size=6)))
}
else if (outcome == "deaths"){
df <- get_reduction_in_deaths_df(list_all_var, list_kids_var, list_adults_var, list_elderly_var, list_twentyplus_var)
if (percent_kids < 50){df[df$strat == "kids" & df$vax_avail > percent_kids, ]$reduction_in_deaths = NA}
if (percent_elderly < 50){df[df$strat == "elderly" & df$vax_avail > percent_elderly, ]$reduction_in_deaths = NA}
if (percent_adults < 50){df[df$strat == "adults" & df$vax_avail > percent_adults, ]$reduction_in_deaths = NA}
if (percent_twentyplus < 50) {df[df$strat == "twentyplus" & df$vax_avail > percent_twentyplus, ]$reduction_in_deaths = NA}
ggplot(df, aes(x = vax_avail, y = reduction_in_deaths, col = strat, fill = strat)) +
geom_line(aes(linetype = variable), size = 2, alpha = 1) +
xlab("Total vaccine supply (% of pop)") +
ylab("Reduction in deaths (%)") +
scale_color_brewer(palette = "Dark2", name = "Allocation Strategy",
labels =  c("Young Adults (20-49)", "All Ages", "Elderly (60+)",
"Children (0-19)", "Adults (20+)")) +
scale_fill_brewer(palette = "Dark2", name = "Allocation Strategy",
labels =  c("Young Adults (20-49)", "All Ages", "Elderly (60+)",
"Children (0-19)", "Adults (20+)")) +
scale_linetype_discrete(name = var_name,
labels = c("Constant", "Age-dependent")) +
scale_y_continuous(expand = c(0,0), limit = c(0, 100)) +
scale_x_continuous(expand = c(0,0), limit = c(0, 50)) +#, breaks = c(0,25,50)) +
# geom_abline(slope = 1, intercept = 0, size = 3, alpha = 0.2) +
# ggtitle("Optimizing for least deaths") +
theme(legend.position = "none") +
#axis.title.x =element_blank(),
#axis.text.x  = element_blank(),
#axis.title.y = element_blank()) +
guides(colour = guide_legend(override.aes = list(size=6)))
}
}
outcome <- "deaths"
pB <- plot_over_vax_avail(outcome, "None", list_all, list_kids, list_adults, list_elderly, list_twentyplus)
print(pB)
outcome <- "cases"
pC <- plot_over_vax_avail(outcome, "None", list_all, list_kids, list_adults, list_elderly, list_twentyplus)
print(pC)
# Plot over vaccine avaliablity ----
plot_over_vax_avail = function(outcome, var_name, list_all_var, list_kids_var, list_adults_var, list_elderly_var, list_twentyplus_var){
theme_set(theme_minimal(base_size = 26))
percent_kids <- round(sum(age_demo[1:2])*100)
percent_elderly <- round(sum(age_demo[7:9])*100)
percent_adults <- round(sum(age_demo[3:5])*100)
percent_twentyplus <- round(sum(age_demo[3:9])*100)
if (outcome == "cases"){
df <- get_reduction_in_cases_df(list_all_var, list_kids_var, list_adults_var, list_elderly_var, list_twentyplus_var)
#df <- rbind(df[df$variable == "var", ], optimal_df_C[optimal_df_C$variable == "var", ])
if (percent_kids < 50){df[df$strat == "kids" & df$vax_avail > percent_kids, ]$reduction_in_cases = NA}
if (percent_elderly < 50) {df[df$strat == "elderly" & df$vax_avail > percent_elderly, ]$reduction_in_cases = NA}
if (percent_adults < 50) {df[df$strat == "adults" & df$vax_avail > percent_adults, ]$reduction_in_cases = NA}
if (percent_twentyplus < 50) {df[df$strat == "twentyplus" & df$vax_avail > percent_twentyplus, ]$reduction_in_cases = NA}
ggplot(df[df$variable == "var"], aes(x = vax_avail, y = reduction_in_cases, col = strat, fill = strat)) +
geom_line(aes(linetype = variable), size = 2, alpha = 1) +
xlab("Total vaccine supply (% of pop)") +
ylab("Reduction in infections (%)") +
scale_color_brewer(palette = "Dark2", name = "Allocation Strategy",
labels =  c("Young Adults (20-49)", "All Ages", "Elderly (60+)",
"Children (0-19)", "Adults (20+)", "Optimal")) +
scale_linetype_discrete(name = var_name) +
#labels = c("Constant", "Age-dependent"))+
scale_y_continuous(expand = c(0,0), limit = c(0, 101)) +
scale_x_continuous(expand = c(0,0), limit = c(0, 50)) +#, breaks = c(0,25,50)) +
# geom_abline(slope = 1, intercept = 0, size = 1, linetype = "solid", alpha = 0.2) +
theme(legend.position = "none") +
#axis.title.x = element_blank(),
#axis.title.y = element_blank()) +
guides(colour = guide_legend(override.aes = list(size=6)))
}
else if (outcome == "deaths"){
df <- get_reduction_in_deaths_df(list_all_var, list_kids_var, list_adults_var, list_elderly_var, list_twentyplus_var)
if (percent_kids < 50){df[df$strat == "kids" & df$vax_avail > percent_kids, ]$reduction_in_deaths = NA}
if (percent_elderly < 50){df[df$strat == "elderly" & df$vax_avail > percent_elderly, ]$reduction_in_deaths = NA}
if (percent_adults < 50){df[df$strat == "adults" & df$vax_avail > percent_adults, ]$reduction_in_deaths = NA}
if (percent_twentyplus < 50) {df[df$strat == "twentyplus" & df$vax_avail > percent_twentyplus, ]$reduction_in_deaths = NA}
ggplot(df, aes(x = vax_avail, y = reduction_in_deaths, col = strat, fill = strat)) +
geom_line(aes(linetype = variable), size = 2, alpha = 1) +
xlab("Total vaccine supply (% of pop)") +
ylab("Reduction in deaths (%)") +
scale_color_brewer(palette = "Dark2", name = "Allocation Strategy",
labels =  c("Young Adults (20-49)", "All Ages", "Elderly (60+)",
"Children (0-19)", "Adults (20+)")) +
scale_fill_brewer(palette = "Dark2", name = "Allocation Strategy",
labels =  c("Young Adults (20-49)", "All Ages", "Elderly (60+)",
"Children (0-19)", "Adults (20+)")) +
scale_linetype_discrete(name = var_name,
labels = c("Constant", "Age-dependent")) +
scale_y_continuous(expand = c(0,0), limit = c(0, 100)) +
scale_x_continuous(expand = c(0,0), limit = c(0, 50)) +#, breaks = c(0,25,50)) +
# geom_abline(slope = 1, intercept = 0, size = 3, alpha = 0.2) +
# ggtitle("Optimizing for least deaths") +
theme(legend.position = "none") +
#axis.title.x =element_blank(),
#axis.text.x  = element_blank(),
#axis.title.y = element_blank()) +
guides(colour = guide_legend(override.aes = list(size=6)))
}
}
outcome <- "cases"
pC <- plot_over_vax_avail(outcome, "None", list_all, list_kids, list_adults, list_elderly, list_twentyplus)
# Plot over vaccine avaliablity ----
plot_over_vax_avail = function(outcome, var_name, list_all_var, list_kids_var, list_adults_var, list_elderly_var, list_twentyplus_var){
theme_set(theme_minimal(base_size = 26))
percent_kids <- round(sum(age_demo[1:2])*100)
percent_elderly <- round(sum(age_demo[7:9])*100)
percent_adults <- round(sum(age_demo[3:5])*100)
percent_twentyplus <- round(sum(age_demo[3:9])*100)
if (outcome == "cases"){
df <- get_reduction_in_cases_df(list_all_var, list_kids_var, list_adults_var, list_elderly_var, list_twentyplus_var)
#df <- rbind(df[df$variable == "var", ], optimal_df_C[optimal_df_C$variable == "var", ])
if (percent_kids < 50){df[df$strat == "kids" & df$vax_avail > percent_kids, ]$reduction_in_cases = NA}
if (percent_elderly < 50) {df[df$strat == "elderly" & df$vax_avail > percent_elderly, ]$reduction_in_cases = NA}
if (percent_adults < 50) {df[df$strat == "adults" & df$vax_avail > percent_adults, ]$reduction_in_cases = NA}
if (percent_twentyplus < 50) {df[df$strat == "twentyplus" & df$vax_avail > percent_twentyplus, ]$reduction_in_cases = NA}
ggplot(df[df$variable == "var",], aes(x = vax_avail, y = reduction_in_cases, col = strat, fill = strat)) +
geom_line(aes(linetype = variable), size = 2, alpha = 1) +
xlab("Total vaccine supply (% of pop)") +
ylab("Reduction in infections (%)") +
scale_color_brewer(palette = "Dark2", name = "Allocation Strategy",
labels =  c("Young Adults (20-49)", "All Ages", "Elderly (60+)",
"Children (0-19)", "Adults (20+)", "Optimal")) +
scale_linetype_discrete(name = var_name) +
#labels = c("Constant", "Age-dependent"))+
scale_y_continuous(expand = c(0,0), limit = c(0, 101)) +
scale_x_continuous(expand = c(0,0), limit = c(0, 50)) +#, breaks = c(0,25,50)) +
# geom_abline(slope = 1, intercept = 0, size = 1, linetype = "solid", alpha = 0.2) +
theme(legend.position = "none") +
#axis.title.x = element_blank(),
#axis.title.y = element_blank()) +
guides(colour = guide_legend(override.aes = list(size=6)))
}
else if (outcome == "deaths"){
df <- get_reduction_in_deaths_df(list_all_var, list_kids_var, list_adults_var, list_elderly_var, list_twentyplus_var)
if (percent_kids < 50){df[df$strat == "kids" & df$vax_avail > percent_kids, ]$reduction_in_deaths = NA}
if (percent_elderly < 50){df[df$strat == "elderly" & df$vax_avail > percent_elderly, ]$reduction_in_deaths = NA}
if (percent_adults < 50){df[df$strat == "adults" & df$vax_avail > percent_adults, ]$reduction_in_deaths = NA}
if (percent_twentyplus < 50) {df[df$strat == "twentyplus" & df$vax_avail > percent_twentyplus, ]$reduction_in_deaths = NA}
ggplot(df, aes(x = vax_avail, y = reduction_in_deaths, col = strat, fill = strat)) +
geom_line(aes(linetype = variable), size = 2, alpha = 1) +
xlab("Total vaccine supply (% of pop)") +
ylab("Reduction in deaths (%)") +
scale_color_brewer(palette = "Dark2", name = "Allocation Strategy",
labels =  c("Young Adults (20-49)", "All Ages", "Elderly (60+)",
"Children (0-19)", "Adults (20+)")) +
scale_fill_brewer(palette = "Dark2", name = "Allocation Strategy",
labels =  c("Young Adults (20-49)", "All Ages", "Elderly (60+)",
"Children (0-19)", "Adults (20+)")) +
scale_linetype_discrete(name = var_name,
labels = c("Constant", "Age-dependent")) +
scale_y_continuous(expand = c(0,0), limit = c(0, 100)) +
scale_x_continuous(expand = c(0,0), limit = c(0, 50)) +#, breaks = c(0,25,50)) +
# geom_abline(slope = 1, intercept = 0, size = 3, alpha = 0.2) +
# ggtitle("Optimizing for least deaths") +
theme(legend.position = "none") +
#axis.title.x =element_blank(),
#axis.text.x  = element_blank(),
#axis.title.y = element_blank()) +
guides(colour = guide_legend(override.aes = list(size=6)))
}
}
outcome <- "cases"
pC <- plot_over_vax_avail(outcome, "None", list_all, list_kids, list_adults, list_elderly, list_twentyplus)
print(pC)
outcome <- "deaths"
plot_over_vax_avail(outcome, "Vaccine efficacy", list_all_v_e_var, list_kids_v_e_var, list_adults_v_e_var, list_elderly_v_e_var, list_twentyplus_v_e_var)
# Plot over vaccine avaliablity ----
plot_over_vax_avail = function(outcome, var_name, list_all_var, list_kids_var, list_adults_var, list_elderly_var, list_twentyplus_var){
theme_set(theme_minimal(base_size = 26))
percent_kids <- round(sum(age_demo[1:2])*100)
percent_elderly <- round(sum(age_demo[7:9])*100)
percent_adults <- round(sum(age_demo[3:5])*100)
percent_twentyplus <- round(sum(age_demo[3:9])*100)
if (outcome == "cases"){
df <- get_reduction_in_cases_df(list_all_var, list_kids_var, list_adults_var, list_elderly_var, list_twentyplus_var)
#df <- rbind(df[df$variable == "var", ], optimal_df_C[optimal_df_C$variable == "var", ])
if (percent_kids < 50){df[df$strat == "kids" & df$vax_avail > percent_kids, ]$reduction_in_cases = NA}
if (percent_elderly < 50) {df[df$strat == "elderly" & df$vax_avail > percent_elderly, ]$reduction_in_cases = NA}
if (percent_adults < 50) {df[df$strat == "adults" & df$vax_avail > percent_adults, ]$reduction_in_cases = NA}
if (percent_twentyplus < 50) {df[df$strat == "twentyplus" & df$vax_avail > percent_twentyplus, ]$reduction_in_cases = NA}
ggplot(df[df$variable == "var",], aes(x = vax_avail, y = reduction_in_cases, col = strat, fill = strat)) +
geom_line(aes(linetype = variable), size = 2, alpha = 1) +
xlab("Total vaccine supply (% of pop)") +
ylab("Reduction in infections (%)") +
scale_color_brewer(palette = "Dark2", name = "Allocation Strategy",
labels =  c("Young Adults (20-49)", "All Ages", "Elderly (60+)",
"Children (0-19)", "Adults (20+)", "Optimal")) +
scale_linetype_discrete(name = var_name) +
#labels = c("Constant", "Age-dependent"))+
scale_y_continuous(expand = c(0,0), limit = c(0, 101)) +
scale_x_continuous(expand = c(0,0), limit = c(0, 50)) +#, breaks = c(0,25,50)) +
# geom_abline(slope = 1, intercept = 0, size = 1, linetype = "solid", alpha = 0.2) +
theme(legend.position = "none") +
#axis.title.x = element_blank(),
#axis.title.y = element_blank()) +
guides(colour = guide_legend(override.aes = list(size=6)))
}
else if (outcome == "deaths"){
df <- get_reduction_in_deaths_df(list_all_var, list_kids_var, list_adults_var, list_elderly_var, list_twentyplus_var)
if (percent_kids < 50){df[df$strat == "kids" & df$vax_avail > percent_kids, ]$reduction_in_deaths = NA}
if (percent_elderly < 50){df[df$strat == "elderly" & df$vax_avail > percent_elderly, ]$reduction_in_deaths = NA}
if (percent_adults < 50){df[df$strat == "adults" & df$vax_avail > percent_adults, ]$reduction_in_deaths = NA}
if (percent_twentyplus < 50) {df[df$strat == "twentyplus" & df$vax_avail > percent_twentyplus, ]$reduction_in_deaths = NA}
ggplot(df, aes(x = vax_avail, y = reduction_in_deaths, col = strat, fill = strat)) +
geom_line(aes(linetype = variable), size = 2, alpha = 1) +
xlab("Total vaccine supply (% of pop)") +
ylab("Reduction in deaths (%)") +
scale_color_brewer(palette = "Dark2", name = "Allocation Strategy",
labels =  c("Young Adults (20-49)", "All Ages", "Elderly (60+)",
"Children (0-19)", "Adults (20+)")) +
scale_fill_brewer(palette = "Dark2", name = "Allocation Strategy",
labels =  c("Young Adults (20-49)", "All Ages", "Elderly (60+)",
"Children (0-19)", "Adults (20+)")) +
scale_linetype_discrete(name = var_name,
labels = c("Constant", "Age-dependent")) +
scale_y_continuous(expand = c(0,0), limit = c(0, 100)) +
scale_x_continuous(expand = c(0,0), limit = c(0, 50)) +#, breaks = c(0,25,50)) +
# geom_abline(slope = 1, intercept = 0, size = 3, alpha = 0.2) +
# ggtitle("Optimizing for least deaths") +
theme() +#legend.position = "none") +
#axis.title.x =element_blank(),
#axis.text.x  = element_blank(),
#axis.title.y = element_blank()) +
guides(colour = guide_legend(override.aes = list(size=6)))
}
}
outcome <- "deaths"
plot_over_vax_avail(outcome, "Vaccine efficacy", list_all_v_e_var, list_kids_v_e_var, list_adults_v_e_var, list_elderly_v_e_var, list_twentyplus_v_e_var)
plot_sero_over_vax_avail = function(outcome, strat_to_plot, mycol){
total_cases <- rep(NA, 510)
total_deaths <- rep(NA, 510)
count <- 1
for (i in list_all_sero_notest){
total_cases[count] <- compute_total_cases(i)
total_deaths[count] <- compute_total_deaths(i)
count <- count + 1
}
for (i in list_all_sero_test){
total_cases[count] <- compute_total_cases(i)
total_deaths[count] <- compute_total_deaths(i)
count <- count + 1
}
for (i in list_kids_sero_notest){
total_cases[count] <- compute_total_cases(i)
total_deaths[count] <- compute_total_deaths(i)
count <- count + 1
}
for (i in list_kids_sero_test){
total_cases[count] <- compute_total_cases(i)
total_deaths[count] <- compute_total_deaths(i)
count <- count + 1
}
for (i in list_adults_sero_notest){
total_cases[count] <- compute_total_cases(i)
total_deaths[count] <- compute_total_deaths(i)
count <- count + 1
}
for (i in list_adults_sero_test){
total_cases[count] <- compute_total_cases(i)
total_deaths[count] <- compute_total_deaths(i)
count <- count + 1
}
for (i in list_elderly_sero_notest){
total_cases[count] <- compute_total_cases(i)
total_deaths[count] <- compute_total_deaths(i)
count <- count + 1
}
for (i in list_elderly_sero_test){
total_cases[count] <- compute_total_cases(i)
total_deaths[count] <- compute_total_deaths(i)
count <- count + 1
}
for (i in list_twentyplus_sero_notest){
total_cases[count] <- compute_total_cases(i)
total_deaths[count] <- compute_total_deaths(i)
count <- count + 1
}
for (i in list_twentyplus_sero_test){
total_cases[count] <- compute_total_cases(i)
total_deaths[count] <- compute_total_deaths(i)
count <- count + 1
}
num_strategies <- 5
vax_avail <- c(rep(seq(0, 50, by = 1), num_strategies*2))
num_per_list <- 51
strat <- c(rep("all", num_per_list*2), rep("kids", num_per_list*2),
rep("young adults", num_per_list*2), rep("elderly", num_per_list*2),
rep("adults", num_per_list*2))
temp <-  c(rep("notest", num_per_list), rep("test", num_per_list))
variable <- c(rep(temp, num_strategies))
theme_set(theme_minimal(base_size = 26))
if (outcome == "cases"){
baseline_cases_notest <- compute_total_cases(list_all_sero_notest$`0`)
baseline_cases_test <- compute_total_cases(list_all_sero_test$`0`)
temp <- c(rep(baseline_cases_notest, num_per_list), rep(baseline_cases_test, num_per_list))
baseline_cases <- c(rep(temp, num_strategies))
reduction_in_cases <- (1-(total_cases/baseline_cases))*100
df <- data.frame(vax_avail, strat, reduction_in_cases, variable)
df[df$strat == "kids" & vax_avail > 23 & variable == "notest", ]$reduction_in_cases = NA
df[df$strat == "kids" & vax_avail > 22 & variable == "test", ]$reduction_in_cases = NA
df[df$strat == "elderly" & vax_avail > 26 & variable == "notest", ]$reduction_in_cases = NA
df[df$strat == "elderly" & vax_avail > 25 & variable == "test", ]$reduction_in_cases = NA
df[df$strat == "young adults" & vax_avail > 38 & variable == "notest", ]$reduction_in_cases = NA
df[df$strat == "young adults" & vax_avail > 36 & variable == "test", ]$reduction_in_cases = NA
df <- df[df$strat == strat_to_plot, ]
ggplot(df, aes(x = vax_avail, y = reduction_in_cases, fill = strat)) +
geom_line(aes(linetype = variable), size = 1.2, alpha = 0.9, color = mycol) +
xlab("Total vaccine supply (% of pop)") +
ylab("% Reduction in cases") +
scale_linetype_discrete(name = "Scenario",
labels = c("No serology tests", "With serology tests"))+
# geom_abline(slope = 1, intercept = 0, size = 1, linetype = "solid", alpha = 0.2) +
# ggtitle("Optimizing for least cases") +
theme(legend.position = "none",
axis.title.x = element_blank(),
axis.text.y  = element_blank(),
axis.title.y = element_blank()) +
scale_y_continuous(expand = c(0,0), limit = c(0, 100)) +
scale_x_continuous(expand = c(0,0), limit = c(0, 50), breaks = c(0, 25, 50)) +
guides(colour = guide_legend(override.aes = list(size=6))) +
ggtitle(plot_title)
}
else if (outcome == "deaths"){
baseline_deaths_notest <- compute_total_deaths(list_all_sero_notest$`0`)
baseline_deaths_test <- compute_total_deaths(list_all_sero_test$`0`)
temp <- c(rep(baseline_deaths_notest, num_per_list), rep(baseline_deaths_test, num_per_list))
baseline_deaths <- c(rep(temp, num_strategies))
reduction_in_deaths <- (1-(total_deaths/baseline_deaths))*100
df <- data.frame(vax_avail, strat, reduction_in_deaths, variable)
df[df$strat == "kids" & vax_avail > 23 & variable == "notest", ]$reduction_in_deaths = NA
df[df$strat == "kids" & vax_avail > 22 & variable == "test", ]$reduction_in_deaths = NA
df[df$strat == "elderly" & vax_avail > 26 & variable == "notest", ]$reduction_in_deaths = NA
df[df$strat == "elderly" & vax_avail > 25 & variable == "test", ]$reduction_in_deaths = NA
df[df$strat == "young adults" & vax_avail > 38 & variable == "notest", ]$reduction_in_deaths = NA
df[df$strat == "young adults" & vax_avail > 36 & variable == "test", ]$reduction_in_deaths = NA
df <- df[df$strat == strat_to_plot, ]
ggplot(df, aes(x = vax_avail, y = reduction_in_deaths, fill = strat)) +
geom_line(aes(linetype = variable), size = 1.2, alpha = 0.9, color = mycol) +
xlab("Vaccine available (% of total pop)") +
ylab("% Reduction in deaths") +
scale_linetype_discrete(name = "Scenario",
labels = c("No serology tests", "With serology tests")) +
scale_y_continuous(expand = c(0,0), limit = c(0, 100)) +
scale_x_continuous(expand = c(0,0), limit = c(0, 50), breaks = c(0, 25, 50)) +
# geom_abline(slope = 1, intercept = 0, size = 3, alpha = 0.2) +
# ggtitle("Optimizing for least deaths") +
theme(legend.position = "none",
axis.title.x=element_blank(),
axis.text.x  = element_blank(),
axis.text.y  = element_blank(),
axis.title.y = element_blank()) +
guides(colour = guide_legend(override.aes = list(size=6))) +
ggtitle(plot_title) +
}
}
plot_sero_over_vax_avail = function(outcome, strat_to_plot, mycol){
if (strategy == "all"){plot_title <- "All Ages"
} else if (strategy == "kids"){plot_title <- "Children (0-19)"
} else if (strategy == "adults"){plot_title <- "Young Adults (20-49)"
} else if (strategy == "elderly"){plot_title <- "Elderly (60+)"
} else if (strategy == "20+"){plot_title <- "Adults (20+)"
}
total_cases <- rep(NA, 510)
total_deaths <- rep(NA, 510)
count <- 1
for (i in list_all_sero_notest){
total_cases[count] <- compute_total_cases(i)
total_deaths[count] <- compute_total_deaths(i)
count <- count + 1
}
for (i in list_all_sero_test){
total_cases[count] <- compute_total_cases(i)
total_deaths[count] <- compute_total_deaths(i)
count <- count + 1
}
for (i in list_kids_sero_notest){
total_cases[count] <- compute_total_cases(i)
total_deaths[count] <- compute_total_deaths(i)
count <- count + 1
}
for (i in list_kids_sero_test){
total_cases[count] <- compute_total_cases(i)
total_deaths[count] <- compute_total_deaths(i)
count <- count + 1
}
for (i in list_adults_sero_notest){
total_cases[count] <- compute_total_cases(i)
total_deaths[count] <- compute_total_deaths(i)
count <- count + 1
}
for (i in list_adults_sero_test){
total_cases[count] <- compute_total_cases(i)
total_deaths[count] <- compute_total_deaths(i)
count <- count + 1
}
for (i in list_elderly_sero_notest){
total_cases[count] <- compute_total_cases(i)
total_deaths[count] <- compute_total_deaths(i)
count <- count + 1
}
for (i in list_elderly_sero_test){
total_cases[count] <- compute_total_cases(i)
total_deaths[count] <- compute_total_deaths(i)
count <- count + 1
}
for (i in list_twentyplus_sero_notest){
total_cases[count] <- compute_total_cases(i)
total_deaths[count] <- compute_total_deaths(i)
count <- count + 1
}
for (i in list_twentyplus_sero_test){
total_cases[count] <- compute_total_cases(i)
total_deaths[count] <- compute_total_deaths(i)
count <- count + 1
}
num_strategies <- 5
vax_avail <- c(rep(seq(0, 50, by = 1), num_strategies*2))
num_per_list <- 51
strat <- c(rep("all", num_per_list*2), rep("kids", num_per_list*2),
rep("young adults", num_per_list*2), rep("elderly", num_per_list*2),
rep("adults", num_per_list*2))
temp <-  c(rep("notest", num_per_list), rep("test", num_per_list))
variable <- c(rep(temp, num_strategies))
theme_set(theme_minimal(base_size = 26))
if (outcome == "cases"){
baseline_cases_notest <- compute_total_cases(list_all_sero_notest$`0`)
baseline_cases_test <- compute_total_cases(list_all_sero_test$`0`)
temp <- c(rep(baseline_cases_notest, num_per_list), rep(baseline_cases_test, num_per_list))
baseline_cases <- c(rep(temp, num_strategies))
reduction_in_cases <- (1-(total_cases/baseline_cases))*100
df <- data.frame(vax_avail, strat, reduction_in_cases, variable)
df[df$strat == "kids" & vax_avail > 23 & variable == "notest", ]$reduction_in_cases = NA
df[df$strat == "kids" & vax_avail > 22 & variable == "test", ]$reduction_in_cases = NA
df[df$strat == "elderly" & vax_avail > 26 & variable == "notest", ]$reduction_in_cases = NA
df[df$strat == "elderly" & vax_avail > 25 & variable == "test", ]$reduction_in_cases = NA
df[df$strat == "young adults" & vax_avail > 38 & variable == "notest", ]$reduction_in_cases = NA
df[df$strat == "young adults" & vax_avail > 36 & variable == "test", ]$reduction_in_cases = NA
df <- df[df$strat == strat_to_plot, ]
ggplot(df, aes(x = vax_avail, y = reduction_in_cases, fill = strat)) +
geom_line(aes(linetype = variable), size = 1.2, alpha = 0.9, color = mycol) +
xlab("Total vaccine supply (% of pop)") +
ylab("% Reduction in cases") +
scale_linetype_discrete(name = "Scenario",
labels = c("No serology tests", "With serology tests"))+
# geom_abline(slope = 1, intercept = 0, size = 1, linetype = "solid", alpha = 0.2) +
# ggtitle("Optimizing for least cases") +
theme(legend.position = "none",
axis.title.x = element_blank(),
axis.text.y  = element_blank(),
axis.title.y = element_blank()) +
scale_y_continuous(expand = c(0,0), limit = c(0, 100)) +
scale_x_continuous(expand = c(0,0), limit = c(0, 50), breaks = c(0, 25, 50)) +
guides(colour = guide_legend(override.aes = list(size=6))) +
ggtitle(plot_title)
}
else if (outcome == "deaths"){
baseline_deaths_notest <- compute_total_deaths(list_all_sero_notest$`0`)
baseline_deaths_test <- compute_total_deaths(list_all_sero_test$`0`)
temp <- c(rep(baseline_deaths_notest, num_per_list), rep(baseline_deaths_test, num_per_list))
baseline_deaths <- c(rep(temp, num_strategies))
reduction_in_deaths <- (1-(total_deaths/baseline_deaths))*100
df <- data.frame(vax_avail, strat, reduction_in_deaths, variable)
df[df$strat == "kids" & vax_avail > 23 & variable == "notest", ]$reduction_in_deaths = NA
df[df$strat == "kids" & vax_avail > 22 & variable == "test", ]$reduction_in_deaths = NA
df[df$strat == "elderly" & vax_avail > 26 & variable == "notest", ]$reduction_in_deaths = NA
df[df$strat == "elderly" & vax_avail > 25 & variable == "test", ]$reduction_in_deaths = NA
df[df$strat == "young adults" & vax_avail > 38 & variable == "notest", ]$reduction_in_deaths = NA
df[df$strat == "young adults" & vax_avail > 36 & variable == "test", ]$reduction_in_deaths = NA
df <- df[df$strat == strat_to_plot, ]
ggplot(df, aes(x = vax_avail, y = reduction_in_deaths, fill = strat)) +
geom_line(aes(linetype = variable), size = 1.2, alpha = 0.9, color = mycol) +
xlab("Vaccine available (% of total pop)") +
ylab("% Reduction in deaths") +
scale_linetype_discrete(name = "Scenario",
labels = c("No serology tests", "With serology tests")) +
scale_y_continuous(expand = c(0,0), limit = c(0, 100)) +
scale_x_continuous(expand = c(0,0), limit = c(0, 50), breaks = c(0, 25, 50)) +
# geom_abline(slope = 1, intercept = 0, size = 3, alpha = 0.2) +
# ggtitle("Optimizing for least deaths") +
theme(legend.position = "none",
axis.title.x=element_blank(),
axis.text.x  = element_blank(),
axis.text.y  = element_blank(),
axis.title.y = element_blank()) +
guides(colour = guide_legend(override.aes = list(size=6))) +
ggtitle(plot_title)
}
}
